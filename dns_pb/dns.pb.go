// Code generated by protoc-gen-go. DO NOT EDIT.
// source: dns_pb/dns.proto

package dns_pb

import (
	context "context"
	fmt "fmt"
	proto "github.com/golang/protobuf/proto"
	empty "github.com/golang/protobuf/ptypes/empty"
	_ "google.golang.org/genproto/googleapis/api/annotations"
	httpbody "google.golang.org/genproto/googleapis/api/httpbody"
	grpc "google.golang.org/grpc"
	codes "google.golang.org/grpc/codes"
	status "google.golang.org/grpc/status"
	math "math"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion3 // please upgrade the proto package

type RequestRecordList struct {
	RecordKey            string   `protobuf:"bytes,1,opt,name=record_key,json=recordKey,proto3" json:"record_key,omitempty"`
	Start                uint32   `protobuf:"varint,3,opt,name=start,proto3" json:"start,omitempty"`
	Count                uint32   `protobuf:"varint,4,opt,name=count,proto3" json:"count,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *RequestRecordList) Reset()         { *m = RequestRecordList{} }
func (m *RequestRecordList) String() string { return proto.CompactTextString(m) }
func (*RequestRecordList) ProtoMessage()    {}
func (*RequestRecordList) Descriptor() ([]byte, []int) {
	return fileDescriptor_fff8ce35d69ae2e0, []int{0}
}

func (m *RequestRecordList) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_RequestRecordList.Unmarshal(m, b)
}
func (m *RequestRecordList) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_RequestRecordList.Marshal(b, m, deterministic)
}
func (m *RequestRecordList) XXX_Merge(src proto.Message) {
	xxx_messageInfo_RequestRecordList.Merge(m, src)
}
func (m *RequestRecordList) XXX_Size() int {
	return xxx_messageInfo_RequestRecordList.Size(m)
}
func (m *RequestRecordList) XXX_DiscardUnknown() {
	xxx_messageInfo_RequestRecordList.DiscardUnknown(m)
}

var xxx_messageInfo_RequestRecordList proto.InternalMessageInfo

func (m *RequestRecordList) GetRecordKey() string {
	if m != nil {
		return m.RecordKey
	}
	return ""
}

func (m *RequestRecordList) GetStart() uint32 {
	if m != nil {
		return m.Start
	}
	return 0
}

func (m *RequestRecordList) GetCount() uint32 {
	if m != nil {
		return m.Count
	}
	return 0
}

type ResponseRecordList struct {
	ErrCode              int32           `protobuf:"varint,1,opt,name=err_code,json=errCode,proto3" json:"err_code,omitempty"`
	ErrMsg               string          `protobuf:"bytes,2,opt,name=err_msg,json=errMsg,proto3" json:"err_msg,omitempty"`
	Data                 *RecordListData `protobuf:"bytes,3,opt,name=data,proto3" json:"data,omitempty"`
	XXX_NoUnkeyedLiteral struct{}        `json:"-"`
	XXX_unrecognized     []byte          `json:"-"`
	XXX_sizecache        int32           `json:"-"`
}

func (m *ResponseRecordList) Reset()         { *m = ResponseRecordList{} }
func (m *ResponseRecordList) String() string { return proto.CompactTextString(m) }
func (*ResponseRecordList) ProtoMessage()    {}
func (*ResponseRecordList) Descriptor() ([]byte, []int) {
	return fileDescriptor_fff8ce35d69ae2e0, []int{1}
}

func (m *ResponseRecordList) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ResponseRecordList.Unmarshal(m, b)
}
func (m *ResponseRecordList) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ResponseRecordList.Marshal(b, m, deterministic)
}
func (m *ResponseRecordList) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ResponseRecordList.Merge(m, src)
}
func (m *ResponseRecordList) XXX_Size() int {
	return xxx_messageInfo_ResponseRecordList.Size(m)
}
func (m *ResponseRecordList) XXX_DiscardUnknown() {
	xxx_messageInfo_ResponseRecordList.DiscardUnknown(m)
}

var xxx_messageInfo_ResponseRecordList proto.InternalMessageInfo

func (m *ResponseRecordList) GetErrCode() int32 {
	if m != nil {
		return m.ErrCode
	}
	return 0
}

func (m *ResponseRecordList) GetErrMsg() string {
	if m != nil {
		return m.ErrMsg
	}
	return ""
}

func (m *ResponseRecordList) GetData() *RecordListData {
	if m != nil {
		return m.Data
	}
	return nil
}

type RecordListData struct {
	Total                int32     `protobuf:"varint,1,opt,name=total,proto3" json:"total,omitempty"`
	List                 []*Record `protobuf:"bytes,2,rep,name=list,proto3" json:"list,omitempty"`
	XXX_NoUnkeyedLiteral struct{}  `json:"-"`
	XXX_unrecognized     []byte    `json:"-"`
	XXX_sizecache        int32     `json:"-"`
}

func (m *RecordListData) Reset()         { *m = RecordListData{} }
func (m *RecordListData) String() string { return proto.CompactTextString(m) }
func (*RecordListData) ProtoMessage()    {}
func (*RecordListData) Descriptor() ([]byte, []int) {
	return fileDescriptor_fff8ce35d69ae2e0, []int{2}
}

func (m *RecordListData) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_RecordListData.Unmarshal(m, b)
}
func (m *RecordListData) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_RecordListData.Marshal(b, m, deterministic)
}
func (m *RecordListData) XXX_Merge(src proto.Message) {
	xxx_messageInfo_RecordListData.Merge(m, src)
}
func (m *RecordListData) XXX_Size() int {
	return xxx_messageInfo_RecordListData.Size(m)
}
func (m *RecordListData) XXX_DiscardUnknown() {
	xxx_messageInfo_RecordListData.DiscardUnknown(m)
}

var xxx_messageInfo_RecordListData proto.InternalMessageInfo

func (m *RecordListData) GetTotal() int32 {
	if m != nil {
		return m.Total
	}
	return 0
}

func (m *RecordListData) GetList() []*Record {
	if m != nil {
		return m.List
	}
	return nil
}

type Record struct {
	Id                   int32    `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`
	DomainId             int32    `protobuf:"varint,2,opt,name=domain_id,json=domainId,proto3" json:"domain_id,omitempty"`
	FoneDomainId         int32    `protobuf:"varint,3,opt,name=fone_domain_id,json=foneDomainId,proto3" json:"fone_domain_id,omitempty"`
	FoneRecordId         int32    `protobuf:"varint,4,opt,name=fone_record_id,json=foneRecordId,proto3" json:"fone_record_id,omitempty"`
	SubDomain            string   `protobuf:"bytes,5,opt,name=sub_domain,json=subDomain,proto3" json:"sub_domain,omitempty"`
	RecordType           string   `protobuf:"bytes,6,opt,name=record_type,json=recordType,proto3" json:"record_type,omitempty"`
	Value                string   `protobuf:"bytes,7,opt,name=value,proto3" json:"value,omitempty"`
	LineId               int32    `protobuf:"varint,8,opt,name=line_id,json=lineId,proto3" json:"line_id,omitempty"`
	Ttl                  int32    `protobuf:"varint,9,opt,name=ttl,proto3" json:"ttl,omitempty"`
	Unit                 string   `protobuf:"bytes,10,opt,name=unit,proto3" json:"unit,omitempty"`
	Priority             int32    `protobuf:"varint,11,opt,name=priority,proto3" json:"priority,omitempty"`
	Disable              int32    `protobuf:"varint,12,opt,name=disable,proto3" json:"disable,omitempty"`
	CreateAt             string   `protobuf:"bytes,13,opt,name=create_at,json=createAt,proto3" json:"create_at,omitempty"`
	UpdateAt             string   `protobuf:"bytes,14,opt,name=update_at,json=updateAt,proto3" json:"update_at,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *Record) Reset()         { *m = Record{} }
func (m *Record) String() string { return proto.CompactTextString(m) }
func (*Record) ProtoMessage()    {}
func (*Record) Descriptor() ([]byte, []int) {
	return fileDescriptor_fff8ce35d69ae2e0, []int{3}
}

func (m *Record) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Record.Unmarshal(m, b)
}
func (m *Record) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Record.Marshal(b, m, deterministic)
}
func (m *Record) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Record.Merge(m, src)
}
func (m *Record) XXX_Size() int {
	return xxx_messageInfo_Record.Size(m)
}
func (m *Record) XXX_DiscardUnknown() {
	xxx_messageInfo_Record.DiscardUnknown(m)
}

var xxx_messageInfo_Record proto.InternalMessageInfo

func (m *Record) GetId() int32 {
	if m != nil {
		return m.Id
	}
	return 0
}

func (m *Record) GetDomainId() int32 {
	if m != nil {
		return m.DomainId
	}
	return 0
}

func (m *Record) GetFoneDomainId() int32 {
	if m != nil {
		return m.FoneDomainId
	}
	return 0
}

func (m *Record) GetFoneRecordId() int32 {
	if m != nil {
		return m.FoneRecordId
	}
	return 0
}

func (m *Record) GetSubDomain() string {
	if m != nil {
		return m.SubDomain
	}
	return ""
}

func (m *Record) GetRecordType() string {
	if m != nil {
		return m.RecordType
	}
	return ""
}

func (m *Record) GetValue() string {
	if m != nil {
		return m.Value
	}
	return ""
}

func (m *Record) GetLineId() int32 {
	if m != nil {
		return m.LineId
	}
	return 0
}

func (m *Record) GetTtl() int32 {
	if m != nil {
		return m.Ttl
	}
	return 0
}

func (m *Record) GetUnit() string {
	if m != nil {
		return m.Unit
	}
	return ""
}

func (m *Record) GetPriority() int32 {
	if m != nil {
		return m.Priority
	}
	return 0
}

func (m *Record) GetDisable() int32 {
	if m != nil {
		return m.Disable
	}
	return 0
}

func (m *Record) GetCreateAt() string {
	if m != nil {
		return m.CreateAt
	}
	return ""
}

func (m *Record) GetUpdateAt() string {
	if m != nil {
		return m.UpdateAt
	}
	return ""
}

type RequestRecordInfo struct {
	RecordKey            string   `protobuf:"bytes,1,opt,name=record_key,json=recordKey,proto3" json:"record_key,omitempty"`
	RecordId             int32    `protobuf:"varint,3,opt,name=recordId,proto3" json:"recordId,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *RequestRecordInfo) Reset()         { *m = RequestRecordInfo{} }
func (m *RequestRecordInfo) String() string { return proto.CompactTextString(m) }
func (*RequestRecordInfo) ProtoMessage()    {}
func (*RequestRecordInfo) Descriptor() ([]byte, []int) {
	return fileDescriptor_fff8ce35d69ae2e0, []int{4}
}

func (m *RequestRecordInfo) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_RequestRecordInfo.Unmarshal(m, b)
}
func (m *RequestRecordInfo) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_RequestRecordInfo.Marshal(b, m, deterministic)
}
func (m *RequestRecordInfo) XXX_Merge(src proto.Message) {
	xxx_messageInfo_RequestRecordInfo.Merge(m, src)
}
func (m *RequestRecordInfo) XXX_Size() int {
	return xxx_messageInfo_RequestRecordInfo.Size(m)
}
func (m *RequestRecordInfo) XXX_DiscardUnknown() {
	xxx_messageInfo_RequestRecordInfo.DiscardUnknown(m)
}

var xxx_messageInfo_RequestRecordInfo proto.InternalMessageInfo

func (m *RequestRecordInfo) GetRecordKey() string {
	if m != nil {
		return m.RecordKey
	}
	return ""
}

func (m *RequestRecordInfo) GetRecordId() int32 {
	if m != nil {
		return m.RecordId
	}
	return 0
}

type ResponseRecordInfo struct {
	ErrCode              int32    `protobuf:"varint,1,opt,name=err_code,json=errCode,proto3" json:"err_code,omitempty"`
	ErrMsg               string   `protobuf:"bytes,2,opt,name=err_msg,json=errMsg,proto3" json:"err_msg,omitempty"`
	Data                 *Record  `protobuf:"bytes,3,opt,name=data,proto3" json:"data,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *ResponseRecordInfo) Reset()         { *m = ResponseRecordInfo{} }
func (m *ResponseRecordInfo) String() string { return proto.CompactTextString(m) }
func (*ResponseRecordInfo) ProtoMessage()    {}
func (*ResponseRecordInfo) Descriptor() ([]byte, []int) {
	return fileDescriptor_fff8ce35d69ae2e0, []int{5}
}

func (m *ResponseRecordInfo) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ResponseRecordInfo.Unmarshal(m, b)
}
func (m *ResponseRecordInfo) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ResponseRecordInfo.Marshal(b, m, deterministic)
}
func (m *ResponseRecordInfo) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ResponseRecordInfo.Merge(m, src)
}
func (m *ResponseRecordInfo) XXX_Size() int {
	return xxx_messageInfo_ResponseRecordInfo.Size(m)
}
func (m *ResponseRecordInfo) XXX_DiscardUnknown() {
	xxx_messageInfo_ResponseRecordInfo.DiscardUnknown(m)
}

var xxx_messageInfo_ResponseRecordInfo proto.InternalMessageInfo

func (m *ResponseRecordInfo) GetErrCode() int32 {
	if m != nil {
		return m.ErrCode
	}
	return 0
}

func (m *ResponseRecordInfo) GetErrMsg() string {
	if m != nil {
		return m.ErrMsg
	}
	return ""
}

func (m *ResponseRecordInfo) GetData() *Record {
	if m != nil {
		return m.Data
	}
	return nil
}

type RequestDomainOfRK struct {
	RecordKey            string   `protobuf:"bytes,1,opt,name=record_key,json=recordKey,proto3" json:"record_key,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *RequestDomainOfRK) Reset()         { *m = RequestDomainOfRK{} }
func (m *RequestDomainOfRK) String() string { return proto.CompactTextString(m) }
func (*RequestDomainOfRK) ProtoMessage()    {}
func (*RequestDomainOfRK) Descriptor() ([]byte, []int) {
	return fileDescriptor_fff8ce35d69ae2e0, []int{6}
}

func (m *RequestDomainOfRK) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_RequestDomainOfRK.Unmarshal(m, b)
}
func (m *RequestDomainOfRK) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_RequestDomainOfRK.Marshal(b, m, deterministic)
}
func (m *RequestDomainOfRK) XXX_Merge(src proto.Message) {
	xxx_messageInfo_RequestDomainOfRK.Merge(m, src)
}
func (m *RequestDomainOfRK) XXX_Size() int {
	return xxx_messageInfo_RequestDomainOfRK.Size(m)
}
func (m *RequestDomainOfRK) XXX_DiscardUnknown() {
	xxx_messageInfo_RequestDomainOfRK.DiscardUnknown(m)
}

var xxx_messageInfo_RequestDomainOfRK proto.InternalMessageInfo

func (m *RequestDomainOfRK) GetRecordKey() string {
	if m != nil {
		return m.RecordKey
	}
	return ""
}

type ResponseDomainOfRK struct {
	ErrCode              int32       `protobuf:"varint,1,opt,name=err_code,json=errCode,proto3" json:"err_code,omitempty"`
	ErrMsg               string      `protobuf:"bytes,2,opt,name=err_msg,json=errMsg,proto3" json:"err_msg,omitempty"`
	Data                 *DomainInfo `protobuf:"bytes,3,opt,name=data,proto3" json:"data,omitempty"`
	XXX_NoUnkeyedLiteral struct{}    `json:"-"`
	XXX_unrecognized     []byte      `json:"-"`
	XXX_sizecache        int32       `json:"-"`
}

func (m *ResponseDomainOfRK) Reset()         { *m = ResponseDomainOfRK{} }
func (m *ResponseDomainOfRK) String() string { return proto.CompactTextString(m) }
func (*ResponseDomainOfRK) ProtoMessage()    {}
func (*ResponseDomainOfRK) Descriptor() ([]byte, []int) {
	return fileDescriptor_fff8ce35d69ae2e0, []int{7}
}

func (m *ResponseDomainOfRK) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ResponseDomainOfRK.Unmarshal(m, b)
}
func (m *ResponseDomainOfRK) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ResponseDomainOfRK.Marshal(b, m, deterministic)
}
func (m *ResponseDomainOfRK) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ResponseDomainOfRK.Merge(m, src)
}
func (m *ResponseDomainOfRK) XXX_Size() int {
	return xxx_messageInfo_ResponseDomainOfRK.Size(m)
}
func (m *ResponseDomainOfRK) XXX_DiscardUnknown() {
	xxx_messageInfo_ResponseDomainOfRK.DiscardUnknown(m)
}

var xxx_messageInfo_ResponseDomainOfRK proto.InternalMessageInfo

func (m *ResponseDomainOfRK) GetErrCode() int32 {
	if m != nil {
		return m.ErrCode
	}
	return 0
}

func (m *ResponseDomainOfRK) GetErrMsg() string {
	if m != nil {
		return m.ErrMsg
	}
	return ""
}

func (m *ResponseDomainOfRK) GetData() *DomainInfo {
	if m != nil {
		return m.Data
	}
	return nil
}

type RequestRecordCreate struct {
	RecordKey            string   `protobuf:"bytes,1,opt,name=record_key,json=recordKey,proto3" json:"record_key,omitempty"`
	SubDomain            string   `protobuf:"bytes,3,opt,name=sub_domain,json=subDomain,proto3" json:"sub_domain,omitempty"`
	RecordType           string   `protobuf:"bytes,4,opt,name=record_type,json=recordType,proto3" json:"record_type,omitempty"`
	Value                string   `protobuf:"bytes,5,opt,name=value,proto3" json:"value,omitempty"`
	LineId               int64    `protobuf:"varint,6,opt,name=line_id,json=lineId,proto3" json:"line_id,omitempty"`
	Ttl                  int64    `protobuf:"varint,7,opt,name=ttl,proto3" json:"ttl,omitempty"`
	Unit                 string   `protobuf:"bytes,8,opt,name=unit,proto3" json:"unit,omitempty"`
	Priority             int64    `protobuf:"varint,9,opt,name=priority,proto3" json:"priority,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *RequestRecordCreate) Reset()         { *m = RequestRecordCreate{} }
func (m *RequestRecordCreate) String() string { return proto.CompactTextString(m) }
func (*RequestRecordCreate) ProtoMessage()    {}
func (*RequestRecordCreate) Descriptor() ([]byte, []int) {
	return fileDescriptor_fff8ce35d69ae2e0, []int{8}
}

func (m *RequestRecordCreate) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_RequestRecordCreate.Unmarshal(m, b)
}
func (m *RequestRecordCreate) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_RequestRecordCreate.Marshal(b, m, deterministic)
}
func (m *RequestRecordCreate) XXX_Merge(src proto.Message) {
	xxx_messageInfo_RequestRecordCreate.Merge(m, src)
}
func (m *RequestRecordCreate) XXX_Size() int {
	return xxx_messageInfo_RequestRecordCreate.Size(m)
}
func (m *RequestRecordCreate) XXX_DiscardUnknown() {
	xxx_messageInfo_RequestRecordCreate.DiscardUnknown(m)
}

var xxx_messageInfo_RequestRecordCreate proto.InternalMessageInfo

func (m *RequestRecordCreate) GetRecordKey() string {
	if m != nil {
		return m.RecordKey
	}
	return ""
}

func (m *RequestRecordCreate) GetSubDomain() string {
	if m != nil {
		return m.SubDomain
	}
	return ""
}

func (m *RequestRecordCreate) GetRecordType() string {
	if m != nil {
		return m.RecordType
	}
	return ""
}

func (m *RequestRecordCreate) GetValue() string {
	if m != nil {
		return m.Value
	}
	return ""
}

func (m *RequestRecordCreate) GetLineId() int64 {
	if m != nil {
		return m.LineId
	}
	return 0
}

func (m *RequestRecordCreate) GetTtl() int64 {
	if m != nil {
		return m.Ttl
	}
	return 0
}

func (m *RequestRecordCreate) GetUnit() string {
	if m != nil {
		return m.Unit
	}
	return ""
}

func (m *RequestRecordCreate) GetPriority() int64 {
	if m != nil {
		return m.Priority
	}
	return 0
}

type ResponseRecordCreate struct {
	ErrCode              int32    `protobuf:"varint,1,opt,name=err_code,json=errCode,proto3" json:"err_code,omitempty"`
	ErrMsg               string   `protobuf:"bytes,2,opt,name=err_msg,json=errMsg,proto3" json:"err_msg,omitempty"`
	Data                 *Record  `protobuf:"bytes,3,opt,name=data,proto3" json:"data,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *ResponseRecordCreate) Reset()         { *m = ResponseRecordCreate{} }
func (m *ResponseRecordCreate) String() string { return proto.CompactTextString(m) }
func (*ResponseRecordCreate) ProtoMessage()    {}
func (*ResponseRecordCreate) Descriptor() ([]byte, []int) {
	return fileDescriptor_fff8ce35d69ae2e0, []int{9}
}

func (m *ResponseRecordCreate) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ResponseRecordCreate.Unmarshal(m, b)
}
func (m *ResponseRecordCreate) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ResponseRecordCreate.Marshal(b, m, deterministic)
}
func (m *ResponseRecordCreate) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ResponseRecordCreate.Merge(m, src)
}
func (m *ResponseRecordCreate) XXX_Size() int {
	return xxx_messageInfo_ResponseRecordCreate.Size(m)
}
func (m *ResponseRecordCreate) XXX_DiscardUnknown() {
	xxx_messageInfo_ResponseRecordCreate.DiscardUnknown(m)
}

var xxx_messageInfo_ResponseRecordCreate proto.InternalMessageInfo

func (m *ResponseRecordCreate) GetErrCode() int32 {
	if m != nil {
		return m.ErrCode
	}
	return 0
}

func (m *ResponseRecordCreate) GetErrMsg() string {
	if m != nil {
		return m.ErrMsg
	}
	return ""
}

func (m *ResponseRecordCreate) GetData() *Record {
	if m != nil {
		return m.Data
	}
	return nil
}

type RequestRecordUpdate struct {
	RecordKey            string   `protobuf:"bytes,1,opt,name=record_key,json=recordKey,proto3" json:"record_key,omitempty"`
	RecordId             int32    `protobuf:"varint,3,opt,name=recordId,proto3" json:"recordId,omitempty"`
	SubDomain            string   `protobuf:"bytes,4,opt,name=sub_domain,json=subDomain,proto3" json:"sub_domain,omitempty"`
	RecordType           string   `protobuf:"bytes,5,opt,name=record_type,json=recordType,proto3" json:"record_type,omitempty"`
	Value                string   `protobuf:"bytes,6,opt,name=value,proto3" json:"value,omitempty"`
	LineId               int32    `protobuf:"varint,7,opt,name=line_id,json=lineId,proto3" json:"line_id,omitempty"`
	Ttl                  int32    `protobuf:"varint,8,opt,name=ttl,proto3" json:"ttl,omitempty"`
	Unit                 string   `protobuf:"bytes,9,opt,name=unit,proto3" json:"unit,omitempty"`
	Priority             int32    `protobuf:"varint,10,opt,name=priority,proto3" json:"priority,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *RequestRecordUpdate) Reset()         { *m = RequestRecordUpdate{} }
func (m *RequestRecordUpdate) String() string { return proto.CompactTextString(m) }
func (*RequestRecordUpdate) ProtoMessage()    {}
func (*RequestRecordUpdate) Descriptor() ([]byte, []int) {
	return fileDescriptor_fff8ce35d69ae2e0, []int{10}
}

func (m *RequestRecordUpdate) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_RequestRecordUpdate.Unmarshal(m, b)
}
func (m *RequestRecordUpdate) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_RequestRecordUpdate.Marshal(b, m, deterministic)
}
func (m *RequestRecordUpdate) XXX_Merge(src proto.Message) {
	xxx_messageInfo_RequestRecordUpdate.Merge(m, src)
}
func (m *RequestRecordUpdate) XXX_Size() int {
	return xxx_messageInfo_RequestRecordUpdate.Size(m)
}
func (m *RequestRecordUpdate) XXX_DiscardUnknown() {
	xxx_messageInfo_RequestRecordUpdate.DiscardUnknown(m)
}

var xxx_messageInfo_RequestRecordUpdate proto.InternalMessageInfo

func (m *RequestRecordUpdate) GetRecordKey() string {
	if m != nil {
		return m.RecordKey
	}
	return ""
}

func (m *RequestRecordUpdate) GetRecordId() int32 {
	if m != nil {
		return m.RecordId
	}
	return 0
}

func (m *RequestRecordUpdate) GetSubDomain() string {
	if m != nil {
		return m.SubDomain
	}
	return ""
}

func (m *RequestRecordUpdate) GetRecordType() string {
	if m != nil {
		return m.RecordType
	}
	return ""
}

func (m *RequestRecordUpdate) GetValue() string {
	if m != nil {
		return m.Value
	}
	return ""
}

func (m *RequestRecordUpdate) GetLineId() int32 {
	if m != nil {
		return m.LineId
	}
	return 0
}

func (m *RequestRecordUpdate) GetTtl() int32 {
	if m != nil {
		return m.Ttl
	}
	return 0
}

func (m *RequestRecordUpdate) GetUnit() string {
	if m != nil {
		return m.Unit
	}
	return ""
}

func (m *RequestRecordUpdate) GetPriority() int32 {
	if m != nil {
		return m.Priority
	}
	return 0
}

type ResponseRecordUpdate struct {
	ErrCode              int32    `protobuf:"varint,1,opt,name=err_code,json=errCode,proto3" json:"err_code,omitempty"`
	ErrMsg               string   `protobuf:"bytes,2,opt,name=err_msg,json=errMsg,proto3" json:"err_msg,omitempty"`
	Data                 string   `protobuf:"bytes,3,opt,name=data,proto3" json:"data,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *ResponseRecordUpdate) Reset()         { *m = ResponseRecordUpdate{} }
func (m *ResponseRecordUpdate) String() string { return proto.CompactTextString(m) }
func (*ResponseRecordUpdate) ProtoMessage()    {}
func (*ResponseRecordUpdate) Descriptor() ([]byte, []int) {
	return fileDescriptor_fff8ce35d69ae2e0, []int{11}
}

func (m *ResponseRecordUpdate) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ResponseRecordUpdate.Unmarshal(m, b)
}
func (m *ResponseRecordUpdate) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ResponseRecordUpdate.Marshal(b, m, deterministic)
}
func (m *ResponseRecordUpdate) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ResponseRecordUpdate.Merge(m, src)
}
func (m *ResponseRecordUpdate) XXX_Size() int {
	return xxx_messageInfo_ResponseRecordUpdate.Size(m)
}
func (m *ResponseRecordUpdate) XXX_DiscardUnknown() {
	xxx_messageInfo_ResponseRecordUpdate.DiscardUnknown(m)
}

var xxx_messageInfo_ResponseRecordUpdate proto.InternalMessageInfo

func (m *ResponseRecordUpdate) GetErrCode() int32 {
	if m != nil {
		return m.ErrCode
	}
	return 0
}

func (m *ResponseRecordUpdate) GetErrMsg() string {
	if m != nil {
		return m.ErrMsg
	}
	return ""
}

func (m *ResponseRecordUpdate) GetData() string {
	if m != nil {
		return m.Data
	}
	return ""
}

type RequestRecordDelete struct {
	RecordKey            string   `protobuf:"bytes,1,opt,name=record_key,json=recordKey,proto3" json:"record_key,omitempty"`
	RecordId             int32    `protobuf:"varint,3,opt,name=recordId,proto3" json:"recordId,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *RequestRecordDelete) Reset()         { *m = RequestRecordDelete{} }
func (m *RequestRecordDelete) String() string { return proto.CompactTextString(m) }
func (*RequestRecordDelete) ProtoMessage()    {}
func (*RequestRecordDelete) Descriptor() ([]byte, []int) {
	return fileDescriptor_fff8ce35d69ae2e0, []int{12}
}

func (m *RequestRecordDelete) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_RequestRecordDelete.Unmarshal(m, b)
}
func (m *RequestRecordDelete) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_RequestRecordDelete.Marshal(b, m, deterministic)
}
func (m *RequestRecordDelete) XXX_Merge(src proto.Message) {
	xxx_messageInfo_RequestRecordDelete.Merge(m, src)
}
func (m *RequestRecordDelete) XXX_Size() int {
	return xxx_messageInfo_RequestRecordDelete.Size(m)
}
func (m *RequestRecordDelete) XXX_DiscardUnknown() {
	xxx_messageInfo_RequestRecordDelete.DiscardUnknown(m)
}

var xxx_messageInfo_RequestRecordDelete proto.InternalMessageInfo

func (m *RequestRecordDelete) GetRecordKey() string {
	if m != nil {
		return m.RecordKey
	}
	return ""
}

func (m *RequestRecordDelete) GetRecordId() int32 {
	if m != nil {
		return m.RecordId
	}
	return 0
}

type ResponseRecordDelete struct {
	ErrCode              int32    `protobuf:"varint,1,opt,name=err_code,json=errCode,proto3" json:"err_code,omitempty"`
	ErrMsg               string   `protobuf:"bytes,2,opt,name=err_msg,json=errMsg,proto3" json:"err_msg,omitempty"`
	Data                 string   `protobuf:"bytes,3,opt,name=data,proto3" json:"data,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *ResponseRecordDelete) Reset()         { *m = ResponseRecordDelete{} }
func (m *ResponseRecordDelete) String() string { return proto.CompactTextString(m) }
func (*ResponseRecordDelete) ProtoMessage()    {}
func (*ResponseRecordDelete) Descriptor() ([]byte, []int) {
	return fileDescriptor_fff8ce35d69ae2e0, []int{13}
}

func (m *ResponseRecordDelete) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ResponseRecordDelete.Unmarshal(m, b)
}
func (m *ResponseRecordDelete) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ResponseRecordDelete.Marshal(b, m, deterministic)
}
func (m *ResponseRecordDelete) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ResponseRecordDelete.Merge(m, src)
}
func (m *ResponseRecordDelete) XXX_Size() int {
	return xxx_messageInfo_ResponseRecordDelete.Size(m)
}
func (m *ResponseRecordDelete) XXX_DiscardUnknown() {
	xxx_messageInfo_ResponseRecordDelete.DiscardUnknown(m)
}

var xxx_messageInfo_ResponseRecordDelete proto.InternalMessageInfo

func (m *ResponseRecordDelete) GetErrCode() int32 {
	if m != nil {
		return m.ErrCode
	}
	return 0
}

func (m *ResponseRecordDelete) GetErrMsg() string {
	if m != nil {
		return m.ErrMsg
	}
	return ""
}

func (m *ResponseRecordDelete) GetData() string {
	if m != nil {
		return m.Data
	}
	return ""
}

type RequestRecordDisable struct {
	RecordKey            string   `protobuf:"bytes,1,opt,name=record_key,json=recordKey,proto3" json:"record_key,omitempty"`
	RecordId             int32    `protobuf:"varint,3,opt,name=recordId,proto3" json:"recordId,omitempty"`
	Disable              bool     `protobuf:"varint,4,opt,name=disable,proto3" json:"disable,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *RequestRecordDisable) Reset()         { *m = RequestRecordDisable{} }
func (m *RequestRecordDisable) String() string { return proto.CompactTextString(m) }
func (*RequestRecordDisable) ProtoMessage()    {}
func (*RequestRecordDisable) Descriptor() ([]byte, []int) {
	return fileDescriptor_fff8ce35d69ae2e0, []int{14}
}

func (m *RequestRecordDisable) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_RequestRecordDisable.Unmarshal(m, b)
}
func (m *RequestRecordDisable) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_RequestRecordDisable.Marshal(b, m, deterministic)
}
func (m *RequestRecordDisable) XXX_Merge(src proto.Message) {
	xxx_messageInfo_RequestRecordDisable.Merge(m, src)
}
func (m *RequestRecordDisable) XXX_Size() int {
	return xxx_messageInfo_RequestRecordDisable.Size(m)
}
func (m *RequestRecordDisable) XXX_DiscardUnknown() {
	xxx_messageInfo_RequestRecordDisable.DiscardUnknown(m)
}

var xxx_messageInfo_RequestRecordDisable proto.InternalMessageInfo

func (m *RequestRecordDisable) GetRecordKey() string {
	if m != nil {
		return m.RecordKey
	}
	return ""
}

func (m *RequestRecordDisable) GetRecordId() int32 {
	if m != nil {
		return m.RecordId
	}
	return 0
}

func (m *RequestRecordDisable) GetDisable() bool {
	if m != nil {
		return m.Disable
	}
	return false
}

type ResponseRecordDisable struct {
	ErrCode              int32    `protobuf:"varint,1,opt,name=err_code,json=errCode,proto3" json:"err_code,omitempty"`
	ErrMsg               string   `protobuf:"bytes,2,opt,name=err_msg,json=errMsg,proto3" json:"err_msg,omitempty"`
	Data                 string   `protobuf:"bytes,3,opt,name=data,proto3" json:"data,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *ResponseRecordDisable) Reset()         { *m = ResponseRecordDisable{} }
func (m *ResponseRecordDisable) String() string { return proto.CompactTextString(m) }
func (*ResponseRecordDisable) ProtoMessage()    {}
func (*ResponseRecordDisable) Descriptor() ([]byte, []int) {
	return fileDescriptor_fff8ce35d69ae2e0, []int{15}
}

func (m *ResponseRecordDisable) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ResponseRecordDisable.Unmarshal(m, b)
}
func (m *ResponseRecordDisable) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ResponseRecordDisable.Marshal(b, m, deterministic)
}
func (m *ResponseRecordDisable) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ResponseRecordDisable.Merge(m, src)
}
func (m *ResponseRecordDisable) XXX_Size() int {
	return xxx_messageInfo_ResponseRecordDisable.Size(m)
}
func (m *ResponseRecordDisable) XXX_DiscardUnknown() {
	xxx_messageInfo_ResponseRecordDisable.DiscardUnknown(m)
}

var xxx_messageInfo_ResponseRecordDisable proto.InternalMessageInfo

func (m *ResponseRecordDisable) GetErrCode() int32 {
	if m != nil {
		return m.ErrCode
	}
	return 0
}

func (m *ResponseRecordDisable) GetErrMsg() string {
	if m != nil {
		return m.ErrMsg
	}
	return ""
}

func (m *ResponseRecordDisable) GetData() string {
	if m != nil {
		return m.Data
	}
	return ""
}

type RequestDomainsList struct {
	// string key = 1;
	Start                uint64   `protobuf:"varint,2,opt,name=start,proto3" json:"start,omitempty"`
	Count                uint64   `protobuf:"varint,3,opt,name=count,proto3" json:"count,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *RequestDomainsList) Reset()         { *m = RequestDomainsList{} }
func (m *RequestDomainsList) String() string { return proto.CompactTextString(m) }
func (*RequestDomainsList) ProtoMessage()    {}
func (*RequestDomainsList) Descriptor() ([]byte, []int) {
	return fileDescriptor_fff8ce35d69ae2e0, []int{16}
}

func (m *RequestDomainsList) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_RequestDomainsList.Unmarshal(m, b)
}
func (m *RequestDomainsList) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_RequestDomainsList.Marshal(b, m, deterministic)
}
func (m *RequestDomainsList) XXX_Merge(src proto.Message) {
	xxx_messageInfo_RequestDomainsList.Merge(m, src)
}
func (m *RequestDomainsList) XXX_Size() int {
	return xxx_messageInfo_RequestDomainsList.Size(m)
}
func (m *RequestDomainsList) XXX_DiscardUnknown() {
	xxx_messageInfo_RequestDomainsList.DiscardUnknown(m)
}

var xxx_messageInfo_RequestDomainsList proto.InternalMessageInfo

func (m *RequestDomainsList) GetStart() uint64 {
	if m != nil {
		return m.Start
	}
	return 0
}

func (m *RequestDomainsList) GetCount() uint64 {
	if m != nil {
		return m.Count
	}
	return 0
}

type RequestOwnDomainsList struct {
	Key                  string   `protobuf:"bytes,1,opt,name=key,proto3" json:"key,omitempty"`
	Start                uint64   `protobuf:"varint,2,opt,name=start,proto3" json:"start,omitempty"`
	Count                uint64   `protobuf:"varint,3,opt,name=count,proto3" json:"count,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *RequestOwnDomainsList) Reset()         { *m = RequestOwnDomainsList{} }
func (m *RequestOwnDomainsList) String() string { return proto.CompactTextString(m) }
func (*RequestOwnDomainsList) ProtoMessage()    {}
func (*RequestOwnDomainsList) Descriptor() ([]byte, []int) {
	return fileDescriptor_fff8ce35d69ae2e0, []int{17}
}

func (m *RequestOwnDomainsList) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_RequestOwnDomainsList.Unmarshal(m, b)
}
func (m *RequestOwnDomainsList) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_RequestOwnDomainsList.Marshal(b, m, deterministic)
}
func (m *RequestOwnDomainsList) XXX_Merge(src proto.Message) {
	xxx_messageInfo_RequestOwnDomainsList.Merge(m, src)
}
func (m *RequestOwnDomainsList) XXX_Size() int {
	return xxx_messageInfo_RequestOwnDomainsList.Size(m)
}
func (m *RequestOwnDomainsList) XXX_DiscardUnknown() {
	xxx_messageInfo_RequestOwnDomainsList.DiscardUnknown(m)
}

var xxx_messageInfo_RequestOwnDomainsList proto.InternalMessageInfo

func (m *RequestOwnDomainsList) GetKey() string {
	if m != nil {
		return m.Key
	}
	return ""
}

func (m *RequestOwnDomainsList) GetStart() uint64 {
	if m != nil {
		return m.Start
	}
	return 0
}

func (m *RequestOwnDomainsList) GetCount() uint64 {
	if m != nil {
		return m.Count
	}
	return 0
}

type ResponseDomainList struct {
	ErrCode              int32           `protobuf:"varint,1,opt,name=err_code,json=errCode,proto3" json:"err_code,omitempty"`
	ErrMsg               string          `protobuf:"bytes,2,opt,name=err_msg,json=errMsg,proto3" json:"err_msg,omitempty"`
	Data                 *DomainListData `protobuf:"bytes,3,opt,name=data,proto3" json:"data,omitempty"`
	XXX_NoUnkeyedLiteral struct{}        `json:"-"`
	XXX_unrecognized     []byte          `json:"-"`
	XXX_sizecache        int32           `json:"-"`
}

func (m *ResponseDomainList) Reset()         { *m = ResponseDomainList{} }
func (m *ResponseDomainList) String() string { return proto.CompactTextString(m) }
func (*ResponseDomainList) ProtoMessage()    {}
func (*ResponseDomainList) Descriptor() ([]byte, []int) {
	return fileDescriptor_fff8ce35d69ae2e0, []int{18}
}

func (m *ResponseDomainList) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ResponseDomainList.Unmarshal(m, b)
}
func (m *ResponseDomainList) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ResponseDomainList.Marshal(b, m, deterministic)
}
func (m *ResponseDomainList) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ResponseDomainList.Merge(m, src)
}
func (m *ResponseDomainList) XXX_Size() int {
	return xxx_messageInfo_ResponseDomainList.Size(m)
}
func (m *ResponseDomainList) XXX_DiscardUnknown() {
	xxx_messageInfo_ResponseDomainList.DiscardUnknown(m)
}

var xxx_messageInfo_ResponseDomainList proto.InternalMessageInfo

func (m *ResponseDomainList) GetErrCode() int32 {
	if m != nil {
		return m.ErrCode
	}
	return 0
}

func (m *ResponseDomainList) GetErrMsg() string {
	if m != nil {
		return m.ErrMsg
	}
	return ""
}

func (m *ResponseDomainList) GetData() *DomainListData {
	if m != nil {
		return m.Data
	}
	return nil
}

type DomainListData struct {
	List                 []*DomainInfo `protobuf:"bytes,1,rep,name=list,proto3" json:"list,omitempty"`
	Total                int32         `protobuf:"varint,2,opt,name=total,proto3" json:"total,omitempty"`
	XXX_NoUnkeyedLiteral struct{}      `json:"-"`
	XXX_unrecognized     []byte        `json:"-"`
	XXX_sizecache        int32         `json:"-"`
}

func (m *DomainListData) Reset()         { *m = DomainListData{} }
func (m *DomainListData) String() string { return proto.CompactTextString(m) }
func (*DomainListData) ProtoMessage()    {}
func (*DomainListData) Descriptor() ([]byte, []int) {
	return fileDescriptor_fff8ce35d69ae2e0, []int{19}
}

func (m *DomainListData) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_DomainListData.Unmarshal(m, b)
}
func (m *DomainListData) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_DomainListData.Marshal(b, m, deterministic)
}
func (m *DomainListData) XXX_Merge(src proto.Message) {
	xxx_messageInfo_DomainListData.Merge(m, src)
}
func (m *DomainListData) XXX_Size() int {
	return xxx_messageInfo_DomainListData.Size(m)
}
func (m *DomainListData) XXX_DiscardUnknown() {
	xxx_messageInfo_DomainListData.DiscardUnknown(m)
}

var xxx_messageInfo_DomainListData proto.InternalMessageInfo

func (m *DomainListData) GetList() []*DomainInfo {
	if m != nil {
		return m.List
	}
	return nil
}

func (m *DomainListData) GetTotal() int32 {
	if m != nil {
		return m.Total
	}
	return 0
}

type DomainInfo struct {
	Id                   int64    `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`
	FoneDomainId         int64    `protobuf:"varint,2,opt,name=fone_domain_id,json=foneDomainId,proto3" json:"fone_domain_id,omitempty"`
	DomainKey            string   `protobuf:"bytes,3,opt,name=domain_key,json=domainKey,proto3" json:"domain_key,omitempty"`
	Domain               string   `protobuf:"bytes,4,opt,name=domain,proto3" json:"domain,omitempty"`
	NameServer           []string `protobuf:"bytes,5,rep,name=name_server,json=nameServer,proto3" json:"name_server,omitempty"`
	SoaEmail             string   `protobuf:"bytes,6,opt,name=soa_email,json=soaEmail,proto3" json:"soa_email,omitempty"`
	Remark               string   `protobuf:"bytes,7,opt,name=remark,proto3" json:"remark,omitempty"`
	IsTakeOver           int64    `protobuf:"varint,8,opt,name=is_take_over,json=isTakeOver,proto3" json:"is_take_over,omitempty"`
	IsOpenKey            int64    `protobuf:"varint,9,opt,name=is_open_key,json=isOpenKey,proto3" json:"is_open_key,omitempty"`
	RecordKey            string   `protobuf:"bytes,10,opt,name=record_key,json=recordKey,proto3" json:"record_key,omitempty"`
	RecordSecret         string   `protobuf:"bytes,11,opt,name=record_secret,json=recordSecret,proto3" json:"record_secret,omitempty"`
	CreateAt             string   `protobuf:"bytes,12,opt,name=create_at,json=createAt,proto3" json:"create_at,omitempty"`
	UpdateAt             string   `protobuf:"bytes,13,opt,name=update_at,json=updateAt,proto3" json:"update_at,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *DomainInfo) Reset()         { *m = DomainInfo{} }
func (m *DomainInfo) String() string { return proto.CompactTextString(m) }
func (*DomainInfo) ProtoMessage()    {}
func (*DomainInfo) Descriptor() ([]byte, []int) {
	return fileDescriptor_fff8ce35d69ae2e0, []int{20}
}

func (m *DomainInfo) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_DomainInfo.Unmarshal(m, b)
}
func (m *DomainInfo) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_DomainInfo.Marshal(b, m, deterministic)
}
func (m *DomainInfo) XXX_Merge(src proto.Message) {
	xxx_messageInfo_DomainInfo.Merge(m, src)
}
func (m *DomainInfo) XXX_Size() int {
	return xxx_messageInfo_DomainInfo.Size(m)
}
func (m *DomainInfo) XXX_DiscardUnknown() {
	xxx_messageInfo_DomainInfo.DiscardUnknown(m)
}

var xxx_messageInfo_DomainInfo proto.InternalMessageInfo

func (m *DomainInfo) GetId() int64 {
	if m != nil {
		return m.Id
	}
	return 0
}

func (m *DomainInfo) GetFoneDomainId() int64 {
	if m != nil {
		return m.FoneDomainId
	}
	return 0
}

func (m *DomainInfo) GetDomainKey() string {
	if m != nil {
		return m.DomainKey
	}
	return ""
}

func (m *DomainInfo) GetDomain() string {
	if m != nil {
		return m.Domain
	}
	return ""
}

func (m *DomainInfo) GetNameServer() []string {
	if m != nil {
		return m.NameServer
	}
	return nil
}

func (m *DomainInfo) GetSoaEmail() string {
	if m != nil {
		return m.SoaEmail
	}
	return ""
}

func (m *DomainInfo) GetRemark() string {
	if m != nil {
		return m.Remark
	}
	return ""
}

func (m *DomainInfo) GetIsTakeOver() int64 {
	if m != nil {
		return m.IsTakeOver
	}
	return 0
}

func (m *DomainInfo) GetIsOpenKey() int64 {
	if m != nil {
		return m.IsOpenKey
	}
	return 0
}

func (m *DomainInfo) GetRecordKey() string {
	if m != nil {
		return m.RecordKey
	}
	return ""
}

func (m *DomainInfo) GetRecordSecret() string {
	if m != nil {
		return m.RecordSecret
	}
	return ""
}

func (m *DomainInfo) GetCreateAt() string {
	if m != nil {
		return m.CreateAt
	}
	return ""
}

func (m *DomainInfo) GetUpdateAt() string {
	if m != nil {
		return m.UpdateAt
	}
	return ""
}

type RequestDomainCreate struct {
	ApiKey               string   `protobuf:"bytes,1,opt,name=api_key,json=apiKey,proto3" json:"api_key,omitempty"`
	Domain               string   `protobuf:"bytes,2,opt,name=domain,proto3" json:"domain,omitempty"`
	Remark               string   `protobuf:"bytes,3,opt,name=remark,proto3" json:"remark,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *RequestDomainCreate) Reset()         { *m = RequestDomainCreate{} }
func (m *RequestDomainCreate) String() string { return proto.CompactTextString(m) }
func (*RequestDomainCreate) ProtoMessage()    {}
func (*RequestDomainCreate) Descriptor() ([]byte, []int) {
	return fileDescriptor_fff8ce35d69ae2e0, []int{21}
}

func (m *RequestDomainCreate) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_RequestDomainCreate.Unmarshal(m, b)
}
func (m *RequestDomainCreate) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_RequestDomainCreate.Marshal(b, m, deterministic)
}
func (m *RequestDomainCreate) XXX_Merge(src proto.Message) {
	xxx_messageInfo_RequestDomainCreate.Merge(m, src)
}
func (m *RequestDomainCreate) XXX_Size() int {
	return xxx_messageInfo_RequestDomainCreate.Size(m)
}
func (m *RequestDomainCreate) XXX_DiscardUnknown() {
	xxx_messageInfo_RequestDomainCreate.DiscardUnknown(m)
}

var xxx_messageInfo_RequestDomainCreate proto.InternalMessageInfo

func (m *RequestDomainCreate) GetApiKey() string {
	if m != nil {
		return m.ApiKey
	}
	return ""
}

func (m *RequestDomainCreate) GetDomain() string {
	if m != nil {
		return m.Domain
	}
	return ""
}

func (m *RequestDomainCreate) GetRemark() string {
	if m != nil {
		return m.Remark
	}
	return ""
}

type ResponseDomainCreate struct {
	ErrCode              int32       `protobuf:"varint,1,opt,name=err_code,json=errCode,proto3" json:"err_code,omitempty"`
	ErrMsg               string      `protobuf:"bytes,2,opt,name=err_msg,json=errMsg,proto3" json:"err_msg,omitempty"`
	Data                 *DomainInfo `protobuf:"bytes,3,opt,name=data,proto3" json:"data,omitempty"`
	XXX_NoUnkeyedLiteral struct{}    `json:"-"`
	XXX_unrecognized     []byte      `json:"-"`
	XXX_sizecache        int32       `json:"-"`
}

func (m *ResponseDomainCreate) Reset()         { *m = ResponseDomainCreate{} }
func (m *ResponseDomainCreate) String() string { return proto.CompactTextString(m) }
func (*ResponseDomainCreate) ProtoMessage()    {}
func (*ResponseDomainCreate) Descriptor() ([]byte, []int) {
	return fileDescriptor_fff8ce35d69ae2e0, []int{22}
}

func (m *ResponseDomainCreate) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ResponseDomainCreate.Unmarshal(m, b)
}
func (m *ResponseDomainCreate) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ResponseDomainCreate.Marshal(b, m, deterministic)
}
func (m *ResponseDomainCreate) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ResponseDomainCreate.Merge(m, src)
}
func (m *ResponseDomainCreate) XXX_Size() int {
	return xxx_messageInfo_ResponseDomainCreate.Size(m)
}
func (m *ResponseDomainCreate) XXX_DiscardUnknown() {
	xxx_messageInfo_ResponseDomainCreate.DiscardUnknown(m)
}

var xxx_messageInfo_ResponseDomainCreate proto.InternalMessageInfo

func (m *ResponseDomainCreate) GetErrCode() int32 {
	if m != nil {
		return m.ErrCode
	}
	return 0
}

func (m *ResponseDomainCreate) GetErrMsg() string {
	if m != nil {
		return m.ErrMsg
	}
	return ""
}

func (m *ResponseDomainCreate) GetData() *DomainInfo {
	if m != nil {
		return m.Data
	}
	return nil
}

type RequestDomainDelete struct {
	ApiKey               string   `protobuf:"bytes,1,opt,name=api_key,json=apiKey,proto3" json:"api_key,omitempty"`
	Id                   int64    `protobuf:"varint,2,opt,name=id,proto3" json:"id,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *RequestDomainDelete) Reset()         { *m = RequestDomainDelete{} }
func (m *RequestDomainDelete) String() string { return proto.CompactTextString(m) }
func (*RequestDomainDelete) ProtoMessage()    {}
func (*RequestDomainDelete) Descriptor() ([]byte, []int) {
	return fileDescriptor_fff8ce35d69ae2e0, []int{23}
}

func (m *RequestDomainDelete) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_RequestDomainDelete.Unmarshal(m, b)
}
func (m *RequestDomainDelete) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_RequestDomainDelete.Marshal(b, m, deterministic)
}
func (m *RequestDomainDelete) XXX_Merge(src proto.Message) {
	xxx_messageInfo_RequestDomainDelete.Merge(m, src)
}
func (m *RequestDomainDelete) XXX_Size() int {
	return xxx_messageInfo_RequestDomainDelete.Size(m)
}
func (m *RequestDomainDelete) XXX_DiscardUnknown() {
	xxx_messageInfo_RequestDomainDelete.DiscardUnknown(m)
}

var xxx_messageInfo_RequestDomainDelete proto.InternalMessageInfo

func (m *RequestDomainDelete) GetApiKey() string {
	if m != nil {
		return m.ApiKey
	}
	return ""
}

func (m *RequestDomainDelete) GetId() int64 {
	if m != nil {
		return m.Id
	}
	return 0
}

type ResponseDomainDelete struct {
	ErrCode              int32    `protobuf:"varint,1,opt,name=err_code,json=errCode,proto3" json:"err_code,omitempty"`
	ErrMsg               string   `protobuf:"bytes,2,opt,name=err_msg,json=errMsg,proto3" json:"err_msg,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *ResponseDomainDelete) Reset()         { *m = ResponseDomainDelete{} }
func (m *ResponseDomainDelete) String() string { return proto.CompactTextString(m) }
func (*ResponseDomainDelete) ProtoMessage()    {}
func (*ResponseDomainDelete) Descriptor() ([]byte, []int) {
	return fileDescriptor_fff8ce35d69ae2e0, []int{24}
}

func (m *ResponseDomainDelete) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ResponseDomainDelete.Unmarshal(m, b)
}
func (m *ResponseDomainDelete) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ResponseDomainDelete.Marshal(b, m, deterministic)
}
func (m *ResponseDomainDelete) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ResponseDomainDelete.Merge(m, src)
}
func (m *ResponseDomainDelete) XXX_Size() int {
	return xxx_messageInfo_ResponseDomainDelete.Size(m)
}
func (m *ResponseDomainDelete) XXX_DiscardUnknown() {
	xxx_messageInfo_ResponseDomainDelete.DiscardUnknown(m)
}

var xxx_messageInfo_ResponseDomainDelete proto.InternalMessageInfo

func (m *ResponseDomainDelete) GetErrCode() int32 {
	if m != nil {
		return m.ErrCode
	}
	return 0
}

func (m *ResponseDomainDelete) GetErrMsg() string {
	if m != nil {
		return m.ErrMsg
	}
	return ""
}

type RequestDomainStatus struct {
	ApiKey               string   `protobuf:"bytes,1,opt,name=api_key,json=apiKey,proto3" json:"api_key,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *RequestDomainStatus) Reset()         { *m = RequestDomainStatus{} }
func (m *RequestDomainStatus) String() string { return proto.CompactTextString(m) }
func (*RequestDomainStatus) ProtoMessage()    {}
func (*RequestDomainStatus) Descriptor() ([]byte, []int) {
	return fileDescriptor_fff8ce35d69ae2e0, []int{25}
}

func (m *RequestDomainStatus) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_RequestDomainStatus.Unmarshal(m, b)
}
func (m *RequestDomainStatus) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_RequestDomainStatus.Marshal(b, m, deterministic)
}
func (m *RequestDomainStatus) XXX_Merge(src proto.Message) {
	xxx_messageInfo_RequestDomainStatus.Merge(m, src)
}
func (m *RequestDomainStatus) XXX_Size() int {
	return xxx_messageInfo_RequestDomainStatus.Size(m)
}
func (m *RequestDomainStatus) XXX_DiscardUnknown() {
	xxx_messageInfo_RequestDomainStatus.DiscardUnknown(m)
}

var xxx_messageInfo_RequestDomainStatus proto.InternalMessageInfo

func (m *RequestDomainStatus) GetApiKey() string {
	if m != nil {
		return m.ApiKey
	}
	return ""
}

type ResponseDomainStatus struct {
	ErrCode              int32     `protobuf:"varint,1,opt,name=err_code,json=errCode,proto3" json:"err_code,omitempty"`
	ErrMsg               string    `protobuf:"bytes,2,opt,name=err_msg,json=errMsg,proto3" json:"err_msg,omitempty"`
	Data                 *TakeOver `protobuf:"bytes,3,opt,name=data,proto3" json:"data,omitempty"`
	XXX_NoUnkeyedLiteral struct{}  `json:"-"`
	XXX_unrecognized     []byte    `json:"-"`
	XXX_sizecache        int32     `json:"-"`
}

func (m *ResponseDomainStatus) Reset()         { *m = ResponseDomainStatus{} }
func (m *ResponseDomainStatus) String() string { return proto.CompactTextString(m) }
func (*ResponseDomainStatus) ProtoMessage()    {}
func (*ResponseDomainStatus) Descriptor() ([]byte, []int) {
	return fileDescriptor_fff8ce35d69ae2e0, []int{26}
}

func (m *ResponseDomainStatus) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ResponseDomainStatus.Unmarshal(m, b)
}
func (m *ResponseDomainStatus) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ResponseDomainStatus.Marshal(b, m, deterministic)
}
func (m *ResponseDomainStatus) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ResponseDomainStatus.Merge(m, src)
}
func (m *ResponseDomainStatus) XXX_Size() int {
	return xxx_messageInfo_ResponseDomainStatus.Size(m)
}
func (m *ResponseDomainStatus) XXX_DiscardUnknown() {
	xxx_messageInfo_ResponseDomainStatus.DiscardUnknown(m)
}

var xxx_messageInfo_ResponseDomainStatus proto.InternalMessageInfo

func (m *ResponseDomainStatus) GetErrCode() int32 {
	if m != nil {
		return m.ErrCode
	}
	return 0
}

func (m *ResponseDomainStatus) GetErrMsg() string {
	if m != nil {
		return m.ErrMsg
	}
	return ""
}

func (m *ResponseDomainStatus) GetData() *TakeOver {
	if m != nil {
		return m.Data
	}
	return nil
}

type TakeOver struct {
	IsTakeOver           int32    `protobuf:"varint,1,opt,name=is_take_over,json=isTakeOver,proto3" json:"is_take_over,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *TakeOver) Reset()         { *m = TakeOver{} }
func (m *TakeOver) String() string { return proto.CompactTextString(m) }
func (*TakeOver) ProtoMessage()    {}
func (*TakeOver) Descriptor() ([]byte, []int) {
	return fileDescriptor_fff8ce35d69ae2e0, []int{27}
}

func (m *TakeOver) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_TakeOver.Unmarshal(m, b)
}
func (m *TakeOver) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_TakeOver.Marshal(b, m, deterministic)
}
func (m *TakeOver) XXX_Merge(src proto.Message) {
	xxx_messageInfo_TakeOver.Merge(m, src)
}
func (m *TakeOver) XXX_Size() int {
	return xxx_messageInfo_TakeOver.Size(m)
}
func (m *TakeOver) XXX_DiscardUnknown() {
	xxx_messageInfo_TakeOver.DiscardUnknown(m)
}

var xxx_messageInfo_TakeOver proto.InternalMessageInfo

func (m *TakeOver) GetIsTakeOver() int32 {
	if m != nil {
		return m.IsTakeOver
	}
	return 0
}

func init() {
	proto.RegisterType((*RequestRecordList)(nil), "dns_pb.RequestRecordList")
	proto.RegisterType((*ResponseRecordList)(nil), "dns_pb.ResponseRecordList")
	proto.RegisterType((*RecordListData)(nil), "dns_pb.RecordListData")
	proto.RegisterType((*Record)(nil), "dns_pb.Record")
	proto.RegisterType((*RequestRecordInfo)(nil), "dns_pb.RequestRecordInfo")
	proto.RegisterType((*ResponseRecordInfo)(nil), "dns_pb.ResponseRecordInfo")
	proto.RegisterType((*RequestDomainOfRK)(nil), "dns_pb.RequestDomainOfRK")
	proto.RegisterType((*ResponseDomainOfRK)(nil), "dns_pb.ResponseDomainOfRK")
	proto.RegisterType((*RequestRecordCreate)(nil), "dns_pb.RequestRecordCreate")
	proto.RegisterType((*ResponseRecordCreate)(nil), "dns_pb.ResponseRecordCreate")
	proto.RegisterType((*RequestRecordUpdate)(nil), "dns_pb.RequestRecordUpdate")
	proto.RegisterType((*ResponseRecordUpdate)(nil), "dns_pb.ResponseRecordUpdate")
	proto.RegisterType((*RequestRecordDelete)(nil), "dns_pb.RequestRecordDelete")
	proto.RegisterType((*ResponseRecordDelete)(nil), "dns_pb.ResponseRecordDelete")
	proto.RegisterType((*RequestRecordDisable)(nil), "dns_pb.RequestRecordDisable")
	proto.RegisterType((*ResponseRecordDisable)(nil), "dns_pb.ResponseRecordDisable")
	proto.RegisterType((*RequestDomainsList)(nil), "dns_pb.RequestDomainsList")
	proto.RegisterType((*RequestOwnDomainsList)(nil), "dns_pb.RequestOwnDomainsList")
	proto.RegisterType((*ResponseDomainList)(nil), "dns_pb.ResponseDomainList")
	proto.RegisterType((*DomainListData)(nil), "dns_pb.DomainListData")
	proto.RegisterType((*DomainInfo)(nil), "dns_pb.DomainInfo")
	proto.RegisterType((*RequestDomainCreate)(nil), "dns_pb.RequestDomainCreate")
	proto.RegisterType((*ResponseDomainCreate)(nil), "dns_pb.ResponseDomainCreate")
	proto.RegisterType((*RequestDomainDelete)(nil), "dns_pb.RequestDomainDelete")
	proto.RegisterType((*ResponseDomainDelete)(nil), "dns_pb.ResponseDomainDelete")
	proto.RegisterType((*RequestDomainStatus)(nil), "dns_pb.RequestDomainStatus")
	proto.RegisterType((*ResponseDomainStatus)(nil), "dns_pb.ResponseDomainStatus")
	proto.RegisterType((*TakeOver)(nil), "dns_pb.TakeOver")
}

func init() { proto.RegisterFile("dns_pb/dns.proto", fileDescriptor_fff8ce35d69ae2e0) }

var fileDescriptor_fff8ce35d69ae2e0 = []byte{
	// 1504 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0xb4, 0x58, 0xcd, 0x6e, 0xdb, 0x46,
	0x17, 0x85, 0x45, 0xfd, 0x5e, 0xc9, 0xb2, 0x33, 0xf1, 0x0f, 0x2d, 0xc7, 0xf9, 0xfc, 0xb1, 0x41,
	0x11, 0x18, 0x85, 0x84, 0xba, 0xbb, 0x2e, 0x8a, 0xa6, 0x76, 0x80, 0x3a, 0x49, 0xe3, 0x40, 0x4e,
	0x36, 0x45, 0x60, 0x62, 0x24, 0x8e, 0x9c, 0x81, 0x69, 0x0e, 0xcb, 0x19, 0x39, 0x10, 0x82, 0x2c,
	0xda, 0x45, 0xb7, 0x5d, 0xf4, 0x7d, 0xfa, 0x12, 0x7d, 0x85, 0xf6, 0x3d, 0x8a, 0xf9, 0xa1, 0x44,
	0x8e, 0x44, 0x1b, 0x76, 0x9c, 0x9d, 0xe7, 0x5e, 0xea, 0x9c, 0x3b, 0x67, 0x2e, 0x0f, 0xef, 0x18,
	0x56, 0x83, 0x88, 0xfb, 0xf1, 0xa0, 0x17, 0x44, 0xbc, 0x1b, 0x27, 0x4c, 0x30, 0x54, 0xd5, 0x91,
	0xce, 0x83, 0x33, 0xc6, 0xce, 0x42, 0xd2, 0xc3, 0x31, 0xed, 0xe1, 0x28, 0x62, 0x02, 0x0b, 0xca,
	0xd2, 0xa7, 0x3a, 0x5b, 0x99, 0xec, 0x3b, 0x21, 0xe2, 0x01, 0x0b, 0x26, 0x26, 0xb5, 0x6d, 0x52,
	0x6a, 0x35, 0x18, 0x8f, 0x7a, 0xe4, 0x22, 0x16, 0x26, 0xe9, 0x9d, 0xc2, 0xbd, 0x3e, 0xf9, 0x65,
	0x4c, 0xb8, 0xe8, 0x93, 0x21, 0x4b, 0x82, 0x17, 0x94, 0x0b, 0xb4, 0x03, 0x90, 0xa8, 0x95, 0x7f,
	0x4e, 0x26, 0xee, 0xd2, 0xee, 0xd2, 0xe3, 0x46, 0xbf, 0xa1, 0x23, 0xcf, 0xc9, 0x04, 0xad, 0x41,
	0x85, 0x0b, 0x9c, 0x08, 0xd7, 0xd9, 0x5d, 0x7a, 0xbc, 0xdc, 0xd7, 0x0b, 0x19, 0x1d, 0xb2, 0x71,
	0x24, 0xdc, 0xb2, 0x8e, 0xaa, 0x85, 0x27, 0x00, 0xf5, 0x09, 0x8f, 0x59, 0xc4, 0x49, 0x86, 0x60,
	0x0b, 0xea, 0x24, 0x49, 0xfc, 0x21, 0x0b, 0x88, 0x82, 0xaf, 0xf4, 0x6b, 0x24, 0x49, 0x0e, 0x58,
	0x40, 0xd0, 0x26, 0xc8, 0x3f, 0xfd, 0x0b, 0x7e, 0xe6, 0x96, 0x14, 0x71, 0x95, 0x24, 0xc9, 0x4f,
	0xfc, 0x0c, 0xed, 0x41, 0x39, 0xc0, 0x02, 0x2b, 0xd2, 0xe6, 0xfe, 0x46, 0x57, 0xcb, 0xd2, 0x9d,
	0xa1, 0x1e, 0x62, 0x81, 0xfb, 0xea, 0x19, 0xef, 0x19, 0xb4, 0xf3, 0x71, 0x59, 0x9d, 0x60, 0x02,
	0x87, 0x86, 0x4e, 0x2f, 0x90, 0x07, 0xe5, 0x90, 0x72, 0xe1, 0x96, 0x76, 0x9d, 0xc7, 0xcd, 0xfd,
	0x76, 0x1e, 0xb3, 0xaf, 0x72, 0xde, 0xef, 0x0e, 0x54, 0x75, 0x00, 0xb5, 0xa1, 0x44, 0x03, 0x83,
	0x50, 0xa2, 0x01, 0xda, 0x86, 0x46, 0xc0, 0x2e, 0x30, 0x8d, 0x7c, 0x1a, 0xa8, 0x6a, 0x2b, 0xfd,
	0xba, 0x0e, 0x1c, 0x05, 0xe8, 0x11, 0xb4, 0x47, 0x2c, 0x22, 0xfe, 0xec, 0x09, 0x47, 0x3d, 0xd1,
	0x92, 0xd1, 0x43, 0xfb, 0x29, 0xa3, 0x37, 0x0d, 0x94, 0x7c, 0xe6, 0x29, 0x4d, 0x7b, 0x14, 0xc8,
	0x03, 0xe1, 0xe3, 0x81, 0x81, 0x72, 0x2b, 0xfa, 0x40, 0xf8, 0x78, 0xa0, 0x61, 0xd0, 0xff, 0xa0,
	0x69, 0x7e, 0x2f, 0x26, 0x31, 0x71, 0xab, 0x2a, 0x6f, 0x8e, 0xf0, 0xf5, 0x24, 0x26, 0x72, 0xf7,
	0x97, 0x38, 0x1c, 0x13, 0xb7, 0xa6, 0x52, 0x7a, 0x21, 0xa5, 0x0e, 0x69, 0x44, 0x24, 0x69, 0x5d,
	0x91, 0x56, 0xe5, 0xf2, 0x28, 0x40, 0xab, 0xe0, 0x08, 0x11, 0xba, 0x0d, 0x15, 0x94, 0x7f, 0x22,
	0x04, 0xe5, 0x71, 0x44, 0x85, 0x0b, 0xea, 0xf7, 0xea, 0x6f, 0xd4, 0x81, 0x7a, 0x9c, 0x50, 0x96,
	0x50, 0x31, 0x71, 0x9b, 0x7a, 0xf3, 0xe9, 0x1a, 0xb9, 0x50, 0x0b, 0x28, 0xc7, 0x83, 0x90, 0xb8,
	0x2d, 0x7d, 0xbe, 0x66, 0x29, 0x35, 0x1b, 0x26, 0x04, 0x0b, 0xe2, 0x63, 0xe1, 0x2e, 0x2b, 0xb8,
	0xba, 0x0e, 0x3c, 0x11, 0x32, 0x39, 0x8e, 0x03, 0x93, 0x6c, 0xeb, 0xa4, 0x0e, 0x3c, 0x11, 0xde,
	0x4b, 0xab, 0x55, 0x8f, 0xa2, 0x11, 0xbb, 0xae, 0x55, 0x3b, 0x50, 0x4f, 0x8c, 0x88, 0x46, 0xfe,
	0xe9, 0xda, 0x0b, 0xed, 0xd6, 0x54, 0x80, 0xb7, 0x69, 0x4d, 0x2f, 0xd7, 0x9a, 0x73, 0x6d, 0xa4,
	0x5a, 0x72, 0x7f, 0x5a, 0xbd, 0x3e, 0xb4, 0xe3, 0x51, 0xff, 0xf9, 0x35, 0xd5, 0x7b, 0xf1, 0xac,
	0xc2, 0xcc, 0x8f, 0x6e, 0x53, 0xe1, 0x97, 0xb9, 0x0a, 0x51, 0x5a, 0xa1, 0x69, 0xc3, 0x68, 0xc4,
	0x4c, 0x95, 0xff, 0x2e, 0xc1, 0xfd, 0x9c, 0xc8, 0x07, 0xea, 0x68, 0xae, 0x93, 0x39, 0xdf, 0x9f,
	0xce, 0x35, 0xfd, 0x59, 0x2e, 0xee, 0xcf, 0x4a, 0x41, 0x7f, 0xca, 0x96, 0x76, 0xec, 0xfe, 0xac,
	0xa9, 0x60, 0xae, 0x3f, 0xeb, 0x05, 0xfd, 0xd9, 0x50, 0x8f, 0x4e, 0xd7, 0x5e, 0x04, 0x6b, 0xf9,
	0xb3, 0x37, 0xfb, 0xfc, 0x5c, 0xa7, 0xff, 0x6b, 0xc9, 0xd2, 0xf5, 0x8d, 0xea, 0xea, 0x4f, 0x68,
	0x5f, 0x4b, 0xf3, 0xf2, 0x35, 0x9a, 0x57, 0x8a, 0x35, 0xaf, 0x16, 0x68, 0x5e, 0x5b, 0xe4, 0x09,
	0xf5, 0x79, 0x4f, 0x68, 0x14, 0x68, 0x0e, 0x79, 0x4f, 0xf0, 0x4e, 0x6d, 0xcd, 0x8d, 0x06, 0xb7,
	0xd1, 0x1c, 0x65, 0x34, 0x6f, 0x18, 0x8d, 0x5f, 0x59, 0x12, 0x1f, 0x92, 0x90, 0x7c, 0x92, 0xc4,
	0xf3, 0x15, 0x1b, 0xc8, 0xbb, 0xaa, 0xf8, 0x5c, 0xe2, 0x67, 0x2b, 0x36, 0x1e, 0xf9, 0x09, 0x5d,
	0x91, 0x31, 0x5e, 0xd9, 0x12, 0xf5, 0xa9, 0xf1, 0x7a, 0x3e, 0xac, 0x5b, 0x9b, 0x31, 0x6c, 0x77,
	0xb5, 0x9b, 0xef, 0xa5, 0x5b, 0x65, 0x1c, 0x8e, 0xab, 0x4f, 0xfd, 0x74, 0x58, 0x90, 0x00, 0xe5,
	0xb9, 0x61, 0xc1, 0xd1, 0x51, 0x3d, 0x2c, 0xbc, 0x91, 0x25, 0x2a, 0x84, 0xe3, 0xf7, 0x51, 0x16,
	0x64, 0x15, 0x9c, 0x99, 0x12, 0xf2, 0xcf, 0x1b, 0xc1, 0x0a, 0xdb, 0x46, 0xef, 0x7a, 0x06, 0x99,
	0xa1, 0x66, 0x66, 0x90, 0x97, 0xd0, 0xce, 0xc7, 0xa5, 0x09, 0xab, 0x69, 0x63, 0x49, 0x4d, 0x1b,
	0x0b, 0x4d, 0x38, 0x34, 0x92, 0xe9, 0x59, 0xa5, 0x94, 0x99, 0x55, 0xbc, 0x3f, 0x1c, 0x80, 0xd9,
	0xa3, 0x99, 0x59, 0xc4, 0x51, 0xb3, 0xc8, 0xfc, 0xb8, 0x51, 0x52, 0xb9, 0xfc, 0xb8, 0xb1, 0x03,
	0x60, 0x1e, 0x90, 0x7a, 0x1a, 0xa3, 0xd6, 0x11, 0xd9, 0x59, 0x1b, 0x50, 0xcd, 0xf9, 0x89, 0x59,
	0x49, 0x33, 0x89, 0xf0, 0x05, 0xf1, 0x39, 0x49, 0x2e, 0x49, 0xe2, 0x56, 0x76, 0x1d, 0x69, 0x26,
	0x32, 0x74, 0xa2, 0x22, 0xf2, 0xc3, 0xcd, 0x19, 0xf6, 0xc9, 0x05, 0xa6, 0xa1, 0x31, 0x94, 0x3a,
	0x67, 0xf8, 0xa9, 0x5c, 0x4b, 0xd4, 0x84, 0x5c, 0xe0, 0xe4, 0xdc, 0x8c, 0x1f, 0x66, 0x85, 0x76,
	0xa1, 0x45, 0xb9, 0x2f, 0xf0, 0x39, 0xf1, 0x99, 0x84, 0xad, 0xab, 0x82, 0x81, 0xf2, 0xd7, 0xf8,
	0x9c, 0x1c, 0x4b, 0xd8, 0x87, 0xd0, 0xa4, 0xdc, 0x67, 0x31, 0xd1, 0xf5, 0x6a, 0x17, 0x6f, 0x50,
	0x7e, 0x1c, 0x93, 0xc8, 0x7c, 0x77, 0x32, 0x2f, 0x0a, 0xd8, 0x2f, 0xca, 0x17, 0xb0, 0x6c, 0xd2,
	0x9c, 0x0c, 0x13, 0x22, 0xd4, 0x98, 0xd2, 0xe8, 0xb7, 0x74, 0xf0, 0x44, 0xc5, 0xf2, 0x03, 0x49,
	0xeb, 0xaa, 0x81, 0x64, 0xd9, 0x1a, 0x48, 0x4e, 0xa7, 0x86, 0xa3, 0xf5, 0x35, 0xdf, 0x90, 0x4d,
	0xa8, 0xe1, 0x98, 0x66, 0x5e, 0xdd, 0x2a, 0x8e, 0x69, 0x5e, 0xdd, 0x52, 0x4e, 0xdd, 0x99, 0x3e,
	0x4e, 0x56, 0x1f, 0x2f, 0x99, 0xd9, 0x4f, 0x8e, 0xe0, 0x73, 0x0e, 0x00, 0xdf, 0x59, 0x7b, 0x32,
	0x8e, 0x57, 0xb8, 0x27, 0xdd, 0x86, 0xa5, 0xb4, 0x0d, 0xbd, 0x67, 0x76, 0xcd, 0xb7, 0xb7, 0x4c,
	0xaf, 0x6b, 0xd5, 0x72, 0x22, 0xb0, 0x18, 0xf3, 0xc2, 0x5a, 0xbc, 0xd8, 0xe6, 0x36, 0x3f, 0xb8,
	0x8d, 0x5e, 0x8f, 0x72, 0x7a, 0xad, 0xa6, 0x7a, 0xa5, 0x9d, 0x69, 0xd4, 0xfa, 0x0a, 0xea, 0xd3,
	0x5e, 0xb5, 0xbb, 0x59, 0x33, 0x65, 0xba, 0x79, 0xff, 0xaf, 0x15, 0x68, 0x1c, 0xbe, 0x3c, 0x31,
	0xaf, 0xcc, 0x29, 0x34, 0xb3, 0x16, 0xd7, 0x99, 0xcd, 0x0d, 0xb6, 0x87, 0x76, 0x32, 0x39, 0xdb,
	0xc6, 0xbc, 0xcd, 0xdf, 0xfe, 0xfe, 0xe7, 0xcf, 0xd2, 0x3d, 0xb4, 0xa2, 0xae, 0x7e, 0x97, 0x5f,
	0xf7, 0x74, 0x53, 0x71, 0xf4, 0x0e, 0xda, 0x96, 0x8b, 0xee, 0x58, 0x14, 0xf9, 0xf4, 0x95, 0x2c,
	0xdb, 0x8a, 0x65, 0x1d, 0xdd, 0xb7, 0x58, 0x7a, 0xec, 0x7d, 0x84, 0x08, 0xb4, 0x72, 0xfd, 0xb9,
	0xbd, 0x70, 0x2b, 0x3a, 0xd9, 0x79, 0xb0, 0x98, 0x45, 0x67, 0xbd, 0x8e, 0xe2, 0x59, 0xf3, 0xec,
	0xdd, 0x7c, 0xbb, 0xb4, 0x87, 0x46, 0x29, 0x8d, 0x69, 0xa9, 0xc5, 0x34, 0x3a, 0x59, 0x44, 0xa3,
	0xb3, 0xe9, 0x76, 0xf6, 0xac, 0xed, 0xf4, 0x3e, 0xd0, 0xe0, 0x23, 0xc2, 0x29, 0x8f, 0x69, 0x9f,
	0xc5, 0x3c, 0x3a, 0x59, 0xc4, 0xa3, 0xb3, 0xde, 0x86, 0xe2, 0x59, 0x45, 0xed, 0x94, 0x87, 0x6b,
	0xc8, 0x17, 0x50, 0x91, 0x33, 0x18, 0x47, 0x1b, 0x5d, 0x7d, 0x39, 0xef, 0xa6, 0x97, 0xf3, 0xee,
	0x53, 0x79, 0x39, 0xef, 0xac, 0xa5, 0x71, 0x1c, 0xd3, 0xee, 0x8f, 0x42, 0xc4, 0x3f, 0xb0, 0x60,
	0xe2, 0xad, 0x2b, 0xb8, 0x15, 0xb4, 0x9c, 0xc2, 0x09, 0x05, 0xd2, 0x87, 0xda, 0x0b, 0x1a, 0x91,
	0x27, 0x61, 0x78, 0x43, 0xbc, 0x2d, 0x85, 0x77, 0x1f, 0xdd, 0x4b, 0xf1, 0xe4, 0xac, 0xc7, 0x7b,
	0x38, 0x0c, 0xd1, 0x00, 0x56, 0x24, 0xe6, 0x01, 0x8b, 0x04, 0x8d, 0x48, 0x24, 0x2f, 0xcb, 0x37,
	0xc3, 0xfe, 0xbf, 0xc2, 0xde, 0x46, 0x5b, 0x79, 0xec, 0x61, 0x06, 0xd0, 0xd4, 0x7d, 0x74, 0xf2,
	0xea, 0x6e, 0xea, 0xa6, 0x3c, 0x46, 0x3f, 0x43, 0x53, 0xd7, 0x3d, 0x8e, 0x44, 0x32, 0xb9, 0x21,
	0xee, 0x8e, 0xc2, 0xdd, 0x44, 0xeb, 0x76, 0xcd, 0x1a, 0xec, 0x2d, 0xb4, 0x24, 0xf6, 0xab, 0x84,
	0x5d, 0xd2, 0x68, 0x48, 0x6e, 0x08, 0xfe, 0x50, 0x81, 0xbb, 0x68, 0x23, 0x0f, 0x1e, 0xa7, 0x68,
	0xa6, 0xf2, 0xe3, 0xb1, 0x38, 0x90, 0x37, 0xe8, 0x3b, 0xa9, 0x9c, 0x8d, 0xc5, 0x50, 0x82, 0xa5,
	0xaa, 0x50, 0x31, 0x39, 0xe2, 0xf1, 0x1d, 0xa9, 0x42, 0xc5, 0x44, 0x2a, 0xfe, 0x16, 0x20, 0xfb,
	0x9f, 0x1d, 0xeb, 0x65, 0x99, 0xa5, 0xe6, 0xfd, 0x65, 0x96, 0x9b, 0x77, 0x31, 0xfd, 0x89, 0xe6,
	0x68, 0x94, 0xa2, 0xeb, 0xcb, 0xf9, 0x42, 0x74, 0x99, 0x2a, 0x42, 0x97, 0xb9, 0xf9, 0x5e, 0xd4,
	0xe8, 0xbd, 0x0f, 0xe9, 0xd8, 0xfc, 0x11, 0x51, 0x58, 0x35, 0x53, 0x71, 0xe6, 0xa2, 0xbd, 0xf0,
	0xc5, 0x97, 0xa9, 0x22, 0xaf, 0x94, 0xb9, 0xf9, 0x83, 0x36, 0x7b, 0x31, 0x26, 0x23, 0xed, 0x32,
	0x77, 0xe7, 0xdc, 0x5e, 0xb8, 0xa9, 0x22, 0xbb, 0xcc, 0x66, 0xe7, 0xed, 0xd2, 0x50, 0x49, 0xbb,
	0x64, 0x29, 0x8d, 0xb9, 0x66, 0x2d, 0xa6, 0xd1, 0xc9, 0x22, 0x1a, 0x9d, 0xf5, 0x1e, 0x29, 0x9a,
	0x87, 0x9d, 0x62, 0xfd, 0x24, 0x61, 0x98, 0x12, 0x16, 0xf8, 0x73, 0x36, 0x59, 0x44, 0x68, 0xfc,
	0xd9, 0x1c, 0xd8, 0xde, 0x15, 0x07, 0x96, 0xc0, 0x72, 0xfe, 0x1a, 0xf3, 0x60, 0x31, 0x9d, 0xce,
	0x76, 0x76, 0x0a, 0xf8, 0xcc, 0xe5, 0xc8, 0xec, 0x70, 0xff, 0xca, 0x1d, 0x0e, 0xaa, 0xea, 0x7d,
	0xf9, 0xe6, 0xbf, 0x00, 0x00, 0x00, 0xff, 0xff, 0x84, 0xb5, 0xff, 0xea, 0xa5, 0x15, 0x00, 0x00,
}

// Reference imports to suppress errors if they are not otherwise used.
var _ context.Context
var _ grpc.ClientConn

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
const _ = grpc.SupportPackageIsVersion4

// DNSServerClient is the client API for DNSServer service.
//
// For semantics around ctx use and closing/ending streaming RPCs, please refer to https://godoc.org/google.golang.org/grpc#ClientConn.NewStream.
type DNSServerClient interface {
	// 获得域名列表
	DomainsList(ctx context.Context, in *RequestDomainsList, opts ...grpc.CallOption) (*ResponseDomainList, error)
	// 获得授权key下的域名列表
	OwnDomainsList(ctx context.Context, in *RequestOwnDomainsList, opts ...grpc.CallOption) (*ResponseDomainList, error)
	// 创建新的域名
	DomainCreate(ctx context.Context, in *RequestDomainCreate, opts ...grpc.CallOption) (*ResponseDomainCreate, error)
	// 域名删除
	DomainDelete(ctx context.Context, in *RequestDomainDelete, opts ...grpc.CallOption) (*ResponseDomainDelete, error)
	// 查看域名托管状态
	DomainStatus(ctx context.Context, in *RequestDomainStatus, opts ...grpc.CallOption) (*ResponseDomainStatus, error)
	// 查看可以添加的类型
	Types(ctx context.Context, in *empty.Empty, opts ...grpc.CallOption) (*httpbody.HttpBody, error)
	// 查看线路
	LineAll(ctx context.Context, in *empty.Empty, opts ...grpc.CallOption) (*httpbody.HttpBody, error)
	LineContinental(ctx context.Context, in *empty.Empty, opts ...grpc.CallOption) (*httpbody.HttpBody, error)
	LineISP(ctx context.Context, in *empty.Empty, opts ...grpc.CallOption) (*httpbody.HttpBody, error)
	LineCountry(ctx context.Context, in *empty.Empty, opts ...grpc.CallOption) (*httpbody.HttpBody, error)
	LineProvince(ctx context.Context, in *empty.Empty, opts ...grpc.CallOption) (*httpbody.HttpBody, error)
	LineOutCity(ctx context.Context, in *empty.Empty, opts ...grpc.CallOption) (*httpbody.HttpBody, error)
	LineCityIsp(ctx context.Context, in *empty.Empty, opts ...grpc.CallOption) (*httpbody.HttpBody, error)
	// 获取解析记录列表
	RecordList(ctx context.Context, in *RequestRecordList, opts ...grpc.CallOption) (*ResponseRecordList, error)
	// 获取解析记录详情
	RecordInfo(ctx context.Context, in *RequestRecordInfo, opts ...grpc.CallOption) (*ResponseRecordInfo, error)
	// 根据record_key获取domain
	RecordDomainOfRK(ctx context.Context, in *RequestDomainOfRK, opts ...grpc.CallOption) (*ResponseDomainOfRK, error)
	// 新增解析记录
	RecordCreate(ctx context.Context, in *RequestRecordCreate, opts ...grpc.CallOption) (*ResponseRecordCreate, error)
	// 更新解析记录
	RecordUpdate(ctx context.Context, in *RequestRecordUpdate, opts ...grpc.CallOption) (*ResponseRecordUpdate, error)
	// 删除解析记录
	RecordDelete(ctx context.Context, in *RequestRecordDelete, opts ...grpc.CallOption) (*ResponseRecordDelete, error)
	// 暂停、启动解析记录
	RecordDisable(ctx context.Context, in *RequestRecordDisable, opts ...grpc.CallOption) (*ResponseRecordDisable, error)
}

type dNSServerClient struct {
	cc *grpc.ClientConn
}

func NewDNSServerClient(cc *grpc.ClientConn) DNSServerClient {
	return &dNSServerClient{cc}
}

func (c *dNSServerClient) DomainsList(ctx context.Context, in *RequestDomainsList, opts ...grpc.CallOption) (*ResponseDomainList, error) {
	out := new(ResponseDomainList)
	err := c.cc.Invoke(ctx, "/dns_pb.DNSServer/DomainsList", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *dNSServerClient) OwnDomainsList(ctx context.Context, in *RequestOwnDomainsList, opts ...grpc.CallOption) (*ResponseDomainList, error) {
	out := new(ResponseDomainList)
	err := c.cc.Invoke(ctx, "/dns_pb.DNSServer/OwnDomainsList", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *dNSServerClient) DomainCreate(ctx context.Context, in *RequestDomainCreate, opts ...grpc.CallOption) (*ResponseDomainCreate, error) {
	out := new(ResponseDomainCreate)
	err := c.cc.Invoke(ctx, "/dns_pb.DNSServer/DomainCreate", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *dNSServerClient) DomainDelete(ctx context.Context, in *RequestDomainDelete, opts ...grpc.CallOption) (*ResponseDomainDelete, error) {
	out := new(ResponseDomainDelete)
	err := c.cc.Invoke(ctx, "/dns_pb.DNSServer/DomainDelete", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *dNSServerClient) DomainStatus(ctx context.Context, in *RequestDomainStatus, opts ...grpc.CallOption) (*ResponseDomainStatus, error) {
	out := new(ResponseDomainStatus)
	err := c.cc.Invoke(ctx, "/dns_pb.DNSServer/DomainStatus", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *dNSServerClient) Types(ctx context.Context, in *empty.Empty, opts ...grpc.CallOption) (*httpbody.HttpBody, error) {
	out := new(httpbody.HttpBody)
	err := c.cc.Invoke(ctx, "/dns_pb.DNSServer/Types", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *dNSServerClient) LineAll(ctx context.Context, in *empty.Empty, opts ...grpc.CallOption) (*httpbody.HttpBody, error) {
	out := new(httpbody.HttpBody)
	err := c.cc.Invoke(ctx, "/dns_pb.DNSServer/LineAll", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *dNSServerClient) LineContinental(ctx context.Context, in *empty.Empty, opts ...grpc.CallOption) (*httpbody.HttpBody, error) {
	out := new(httpbody.HttpBody)
	err := c.cc.Invoke(ctx, "/dns_pb.DNSServer/LineContinental", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *dNSServerClient) LineISP(ctx context.Context, in *empty.Empty, opts ...grpc.CallOption) (*httpbody.HttpBody, error) {
	out := new(httpbody.HttpBody)
	err := c.cc.Invoke(ctx, "/dns_pb.DNSServer/LineISP", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *dNSServerClient) LineCountry(ctx context.Context, in *empty.Empty, opts ...grpc.CallOption) (*httpbody.HttpBody, error) {
	out := new(httpbody.HttpBody)
	err := c.cc.Invoke(ctx, "/dns_pb.DNSServer/LineCountry", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *dNSServerClient) LineProvince(ctx context.Context, in *empty.Empty, opts ...grpc.CallOption) (*httpbody.HttpBody, error) {
	out := new(httpbody.HttpBody)
	err := c.cc.Invoke(ctx, "/dns_pb.DNSServer/LineProvince", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *dNSServerClient) LineOutCity(ctx context.Context, in *empty.Empty, opts ...grpc.CallOption) (*httpbody.HttpBody, error) {
	out := new(httpbody.HttpBody)
	err := c.cc.Invoke(ctx, "/dns_pb.DNSServer/LineOutCity", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *dNSServerClient) LineCityIsp(ctx context.Context, in *empty.Empty, opts ...grpc.CallOption) (*httpbody.HttpBody, error) {
	out := new(httpbody.HttpBody)
	err := c.cc.Invoke(ctx, "/dns_pb.DNSServer/LineCityIsp", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *dNSServerClient) RecordList(ctx context.Context, in *RequestRecordList, opts ...grpc.CallOption) (*ResponseRecordList, error) {
	out := new(ResponseRecordList)
	err := c.cc.Invoke(ctx, "/dns_pb.DNSServer/RecordList", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *dNSServerClient) RecordInfo(ctx context.Context, in *RequestRecordInfo, opts ...grpc.CallOption) (*ResponseRecordInfo, error) {
	out := new(ResponseRecordInfo)
	err := c.cc.Invoke(ctx, "/dns_pb.DNSServer/RecordInfo", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *dNSServerClient) RecordDomainOfRK(ctx context.Context, in *RequestDomainOfRK, opts ...grpc.CallOption) (*ResponseDomainOfRK, error) {
	out := new(ResponseDomainOfRK)
	err := c.cc.Invoke(ctx, "/dns_pb.DNSServer/RecordDomainOfRK", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *dNSServerClient) RecordCreate(ctx context.Context, in *RequestRecordCreate, opts ...grpc.CallOption) (*ResponseRecordCreate, error) {
	out := new(ResponseRecordCreate)
	err := c.cc.Invoke(ctx, "/dns_pb.DNSServer/RecordCreate", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *dNSServerClient) RecordUpdate(ctx context.Context, in *RequestRecordUpdate, opts ...grpc.CallOption) (*ResponseRecordUpdate, error) {
	out := new(ResponseRecordUpdate)
	err := c.cc.Invoke(ctx, "/dns_pb.DNSServer/RecordUpdate", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *dNSServerClient) RecordDelete(ctx context.Context, in *RequestRecordDelete, opts ...grpc.CallOption) (*ResponseRecordDelete, error) {
	out := new(ResponseRecordDelete)
	err := c.cc.Invoke(ctx, "/dns_pb.DNSServer/RecordDelete", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *dNSServerClient) RecordDisable(ctx context.Context, in *RequestRecordDisable, opts ...grpc.CallOption) (*ResponseRecordDisable, error) {
	out := new(ResponseRecordDisable)
	err := c.cc.Invoke(ctx, "/dns_pb.DNSServer/RecordDisable", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// DNSServerServer is the server API for DNSServer service.
type DNSServerServer interface {
	// 获得域名列表
	DomainsList(context.Context, *RequestDomainsList) (*ResponseDomainList, error)
	// 获得授权key下的域名列表
	OwnDomainsList(context.Context, *RequestOwnDomainsList) (*ResponseDomainList, error)
	// 创建新的域名
	DomainCreate(context.Context, *RequestDomainCreate) (*ResponseDomainCreate, error)
	// 域名删除
	DomainDelete(context.Context, *RequestDomainDelete) (*ResponseDomainDelete, error)
	// 查看域名托管状态
	DomainStatus(context.Context, *RequestDomainStatus) (*ResponseDomainStatus, error)
	// 查看可以添加的类型
	Types(context.Context, *empty.Empty) (*httpbody.HttpBody, error)
	// 查看线路
	LineAll(context.Context, *empty.Empty) (*httpbody.HttpBody, error)
	LineContinental(context.Context, *empty.Empty) (*httpbody.HttpBody, error)
	LineISP(context.Context, *empty.Empty) (*httpbody.HttpBody, error)
	LineCountry(context.Context, *empty.Empty) (*httpbody.HttpBody, error)
	LineProvince(context.Context, *empty.Empty) (*httpbody.HttpBody, error)
	LineOutCity(context.Context, *empty.Empty) (*httpbody.HttpBody, error)
	LineCityIsp(context.Context, *empty.Empty) (*httpbody.HttpBody, error)
	// 获取解析记录列表
	RecordList(context.Context, *RequestRecordList) (*ResponseRecordList, error)
	// 获取解析记录详情
	RecordInfo(context.Context, *RequestRecordInfo) (*ResponseRecordInfo, error)
	// 根据record_key获取domain
	RecordDomainOfRK(context.Context, *RequestDomainOfRK) (*ResponseDomainOfRK, error)
	// 新增解析记录
	RecordCreate(context.Context, *RequestRecordCreate) (*ResponseRecordCreate, error)
	// 更新解析记录
	RecordUpdate(context.Context, *RequestRecordUpdate) (*ResponseRecordUpdate, error)
	// 删除解析记录
	RecordDelete(context.Context, *RequestRecordDelete) (*ResponseRecordDelete, error)
	// 暂停、启动解析记录
	RecordDisable(context.Context, *RequestRecordDisable) (*ResponseRecordDisable, error)
}

// UnimplementedDNSServerServer can be embedded to have forward compatible implementations.
type UnimplementedDNSServerServer struct {
}

func (*UnimplementedDNSServerServer) DomainsList(ctx context.Context, req *RequestDomainsList) (*ResponseDomainList, error) {
	return nil, status.Errorf(codes.Unimplemented, "method DomainsList not implemented")
}
func (*UnimplementedDNSServerServer) OwnDomainsList(ctx context.Context, req *RequestOwnDomainsList) (*ResponseDomainList, error) {
	return nil, status.Errorf(codes.Unimplemented, "method OwnDomainsList not implemented")
}
func (*UnimplementedDNSServerServer) DomainCreate(ctx context.Context, req *RequestDomainCreate) (*ResponseDomainCreate, error) {
	return nil, status.Errorf(codes.Unimplemented, "method DomainCreate not implemented")
}
func (*UnimplementedDNSServerServer) DomainDelete(ctx context.Context, req *RequestDomainDelete) (*ResponseDomainDelete, error) {
	return nil, status.Errorf(codes.Unimplemented, "method DomainDelete not implemented")
}
func (*UnimplementedDNSServerServer) DomainStatus(ctx context.Context, req *RequestDomainStatus) (*ResponseDomainStatus, error) {
	return nil, status.Errorf(codes.Unimplemented, "method DomainStatus not implemented")
}
func (*UnimplementedDNSServerServer) Types(ctx context.Context, req *empty.Empty) (*httpbody.HttpBody, error) {
	return nil, status.Errorf(codes.Unimplemented, "method Types not implemented")
}
func (*UnimplementedDNSServerServer) LineAll(ctx context.Context, req *empty.Empty) (*httpbody.HttpBody, error) {
	return nil, status.Errorf(codes.Unimplemented, "method LineAll not implemented")
}
func (*UnimplementedDNSServerServer) LineContinental(ctx context.Context, req *empty.Empty) (*httpbody.HttpBody, error) {
	return nil, status.Errorf(codes.Unimplemented, "method LineContinental not implemented")
}
func (*UnimplementedDNSServerServer) LineISP(ctx context.Context, req *empty.Empty) (*httpbody.HttpBody, error) {
	return nil, status.Errorf(codes.Unimplemented, "method LineISP not implemented")
}
func (*UnimplementedDNSServerServer) LineCountry(ctx context.Context, req *empty.Empty) (*httpbody.HttpBody, error) {
	return nil, status.Errorf(codes.Unimplemented, "method LineCountry not implemented")
}
func (*UnimplementedDNSServerServer) LineProvince(ctx context.Context, req *empty.Empty) (*httpbody.HttpBody, error) {
	return nil, status.Errorf(codes.Unimplemented, "method LineProvince not implemented")
}
func (*UnimplementedDNSServerServer) LineOutCity(ctx context.Context, req *empty.Empty) (*httpbody.HttpBody, error) {
	return nil, status.Errorf(codes.Unimplemented, "method LineOutCity not implemented")
}
func (*UnimplementedDNSServerServer) LineCityIsp(ctx context.Context, req *empty.Empty) (*httpbody.HttpBody, error) {
	return nil, status.Errorf(codes.Unimplemented, "method LineCityIsp not implemented")
}
func (*UnimplementedDNSServerServer) RecordList(ctx context.Context, req *RequestRecordList) (*ResponseRecordList, error) {
	return nil, status.Errorf(codes.Unimplemented, "method RecordList not implemented")
}
func (*UnimplementedDNSServerServer) RecordInfo(ctx context.Context, req *RequestRecordInfo) (*ResponseRecordInfo, error) {
	return nil, status.Errorf(codes.Unimplemented, "method RecordInfo not implemented")
}
func (*UnimplementedDNSServerServer) RecordDomainOfRK(ctx context.Context, req *RequestDomainOfRK) (*ResponseDomainOfRK, error) {
	return nil, status.Errorf(codes.Unimplemented, "method RecordDomainOfRK not implemented")
}
func (*UnimplementedDNSServerServer) RecordCreate(ctx context.Context, req *RequestRecordCreate) (*ResponseRecordCreate, error) {
	return nil, status.Errorf(codes.Unimplemented, "method RecordCreate not implemented")
}
func (*UnimplementedDNSServerServer) RecordUpdate(ctx context.Context, req *RequestRecordUpdate) (*ResponseRecordUpdate, error) {
	return nil, status.Errorf(codes.Unimplemented, "method RecordUpdate not implemented")
}
func (*UnimplementedDNSServerServer) RecordDelete(ctx context.Context, req *RequestRecordDelete) (*ResponseRecordDelete, error) {
	return nil, status.Errorf(codes.Unimplemented, "method RecordDelete not implemented")
}
func (*UnimplementedDNSServerServer) RecordDisable(ctx context.Context, req *RequestRecordDisable) (*ResponseRecordDisable, error) {
	return nil, status.Errorf(codes.Unimplemented, "method RecordDisable not implemented")
}

func RegisterDNSServerServer(s *grpc.Server, srv DNSServerServer) {
	s.RegisterService(&_DNSServer_serviceDesc, srv)
}

func _DNSServer_DomainsList_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(RequestDomainsList)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(DNSServerServer).DomainsList(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/dns_pb.DNSServer/DomainsList",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(DNSServerServer).DomainsList(ctx, req.(*RequestDomainsList))
	}
	return interceptor(ctx, in, info, handler)
}

func _DNSServer_OwnDomainsList_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(RequestOwnDomainsList)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(DNSServerServer).OwnDomainsList(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/dns_pb.DNSServer/OwnDomainsList",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(DNSServerServer).OwnDomainsList(ctx, req.(*RequestOwnDomainsList))
	}
	return interceptor(ctx, in, info, handler)
}

func _DNSServer_DomainCreate_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(RequestDomainCreate)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(DNSServerServer).DomainCreate(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/dns_pb.DNSServer/DomainCreate",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(DNSServerServer).DomainCreate(ctx, req.(*RequestDomainCreate))
	}
	return interceptor(ctx, in, info, handler)
}

func _DNSServer_DomainDelete_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(RequestDomainDelete)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(DNSServerServer).DomainDelete(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/dns_pb.DNSServer/DomainDelete",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(DNSServerServer).DomainDelete(ctx, req.(*RequestDomainDelete))
	}
	return interceptor(ctx, in, info, handler)
}

func _DNSServer_DomainStatus_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(RequestDomainStatus)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(DNSServerServer).DomainStatus(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/dns_pb.DNSServer/DomainStatus",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(DNSServerServer).DomainStatus(ctx, req.(*RequestDomainStatus))
	}
	return interceptor(ctx, in, info, handler)
}

func _DNSServer_Types_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(empty.Empty)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(DNSServerServer).Types(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/dns_pb.DNSServer/Types",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(DNSServerServer).Types(ctx, req.(*empty.Empty))
	}
	return interceptor(ctx, in, info, handler)
}

func _DNSServer_LineAll_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(empty.Empty)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(DNSServerServer).LineAll(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/dns_pb.DNSServer/LineAll",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(DNSServerServer).LineAll(ctx, req.(*empty.Empty))
	}
	return interceptor(ctx, in, info, handler)
}

func _DNSServer_LineContinental_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(empty.Empty)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(DNSServerServer).LineContinental(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/dns_pb.DNSServer/LineContinental",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(DNSServerServer).LineContinental(ctx, req.(*empty.Empty))
	}
	return interceptor(ctx, in, info, handler)
}

func _DNSServer_LineISP_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(empty.Empty)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(DNSServerServer).LineISP(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/dns_pb.DNSServer/LineISP",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(DNSServerServer).LineISP(ctx, req.(*empty.Empty))
	}
	return interceptor(ctx, in, info, handler)
}

func _DNSServer_LineCountry_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(empty.Empty)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(DNSServerServer).LineCountry(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/dns_pb.DNSServer/LineCountry",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(DNSServerServer).LineCountry(ctx, req.(*empty.Empty))
	}
	return interceptor(ctx, in, info, handler)
}

func _DNSServer_LineProvince_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(empty.Empty)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(DNSServerServer).LineProvince(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/dns_pb.DNSServer/LineProvince",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(DNSServerServer).LineProvince(ctx, req.(*empty.Empty))
	}
	return interceptor(ctx, in, info, handler)
}

func _DNSServer_LineOutCity_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(empty.Empty)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(DNSServerServer).LineOutCity(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/dns_pb.DNSServer/LineOutCity",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(DNSServerServer).LineOutCity(ctx, req.(*empty.Empty))
	}
	return interceptor(ctx, in, info, handler)
}

func _DNSServer_LineCityIsp_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(empty.Empty)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(DNSServerServer).LineCityIsp(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/dns_pb.DNSServer/LineCityIsp",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(DNSServerServer).LineCityIsp(ctx, req.(*empty.Empty))
	}
	return interceptor(ctx, in, info, handler)
}

func _DNSServer_RecordList_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(RequestRecordList)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(DNSServerServer).RecordList(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/dns_pb.DNSServer/RecordList",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(DNSServerServer).RecordList(ctx, req.(*RequestRecordList))
	}
	return interceptor(ctx, in, info, handler)
}

func _DNSServer_RecordInfo_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(RequestRecordInfo)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(DNSServerServer).RecordInfo(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/dns_pb.DNSServer/RecordInfo",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(DNSServerServer).RecordInfo(ctx, req.(*RequestRecordInfo))
	}
	return interceptor(ctx, in, info, handler)
}

func _DNSServer_RecordDomainOfRK_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(RequestDomainOfRK)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(DNSServerServer).RecordDomainOfRK(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/dns_pb.DNSServer/RecordDomainOfRK",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(DNSServerServer).RecordDomainOfRK(ctx, req.(*RequestDomainOfRK))
	}
	return interceptor(ctx, in, info, handler)
}

func _DNSServer_RecordCreate_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(RequestRecordCreate)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(DNSServerServer).RecordCreate(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/dns_pb.DNSServer/RecordCreate",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(DNSServerServer).RecordCreate(ctx, req.(*RequestRecordCreate))
	}
	return interceptor(ctx, in, info, handler)
}

func _DNSServer_RecordUpdate_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(RequestRecordUpdate)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(DNSServerServer).RecordUpdate(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/dns_pb.DNSServer/RecordUpdate",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(DNSServerServer).RecordUpdate(ctx, req.(*RequestRecordUpdate))
	}
	return interceptor(ctx, in, info, handler)
}

func _DNSServer_RecordDelete_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(RequestRecordDelete)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(DNSServerServer).RecordDelete(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/dns_pb.DNSServer/RecordDelete",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(DNSServerServer).RecordDelete(ctx, req.(*RequestRecordDelete))
	}
	return interceptor(ctx, in, info, handler)
}

func _DNSServer_RecordDisable_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(RequestRecordDisable)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(DNSServerServer).RecordDisable(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/dns_pb.DNSServer/RecordDisable",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(DNSServerServer).RecordDisable(ctx, req.(*RequestRecordDisable))
	}
	return interceptor(ctx, in, info, handler)
}

var _DNSServer_serviceDesc = grpc.ServiceDesc{
	ServiceName: "dns_pb.DNSServer",
	HandlerType: (*DNSServerServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "DomainsList",
			Handler:    _DNSServer_DomainsList_Handler,
		},
		{
			MethodName: "OwnDomainsList",
			Handler:    _DNSServer_OwnDomainsList_Handler,
		},
		{
			MethodName: "DomainCreate",
			Handler:    _DNSServer_DomainCreate_Handler,
		},
		{
			MethodName: "DomainDelete",
			Handler:    _DNSServer_DomainDelete_Handler,
		},
		{
			MethodName: "DomainStatus",
			Handler:    _DNSServer_DomainStatus_Handler,
		},
		{
			MethodName: "Types",
			Handler:    _DNSServer_Types_Handler,
		},
		{
			MethodName: "LineAll",
			Handler:    _DNSServer_LineAll_Handler,
		},
		{
			MethodName: "LineContinental",
			Handler:    _DNSServer_LineContinental_Handler,
		},
		{
			MethodName: "LineISP",
			Handler:    _DNSServer_LineISP_Handler,
		},
		{
			MethodName: "LineCountry",
			Handler:    _DNSServer_LineCountry_Handler,
		},
		{
			MethodName: "LineProvince",
			Handler:    _DNSServer_LineProvince_Handler,
		},
		{
			MethodName: "LineOutCity",
			Handler:    _DNSServer_LineOutCity_Handler,
		},
		{
			MethodName: "LineCityIsp",
			Handler:    _DNSServer_LineCityIsp_Handler,
		},
		{
			MethodName: "RecordList",
			Handler:    _DNSServer_RecordList_Handler,
		},
		{
			MethodName: "RecordInfo",
			Handler:    _DNSServer_RecordInfo_Handler,
		},
		{
			MethodName: "RecordDomainOfRK",
			Handler:    _DNSServer_RecordDomainOfRK_Handler,
		},
		{
			MethodName: "RecordCreate",
			Handler:    _DNSServer_RecordCreate_Handler,
		},
		{
			MethodName: "RecordUpdate",
			Handler:    _DNSServer_RecordUpdate_Handler,
		},
		{
			MethodName: "RecordDelete",
			Handler:    _DNSServer_RecordDelete_Handler,
		},
		{
			MethodName: "RecordDisable",
			Handler:    _DNSServer_RecordDisable_Handler,
		},
	},
	Streams:  []grpc.StreamDesc{},
	Metadata: "dns_pb/dns.proto",
}
